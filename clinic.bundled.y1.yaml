components:
  schemas:
    Clinic:
      description: Object describing a clinic
      properties:
        address:
          enum:
          - test
          type: string
        id:
          type: string
        location:
          type: string
        metadata:
          type: object
        name:
          minLength: 1
          type: string
        phoneNumbers:
          items:
            properties:
              number:
                type: string
              type:
                type: string
            type: object
          type: array
      title: Clinic
      type: object
      x-examples:
        example:
          address: 3000 Main drive
          id: '5445'
          location: Walnut Creek
          metadata: {}
          name: John Muir
          phoneNumbers:
            number: 555-555-5555
            type: main
    ClinicianClinicRelationship:
      properties:
        clinicId:
          type: string
        clinicianId:
          type: string
        id:
          type: string
        permisions:
          items:
            type: string
          type: array
      title: ClinicianClinicRelationship
      type: object
    PatientClinicRelationship:
      properties:
        clinicId:
          type: string
        id:
          type: string
        patientId:
          type: string
        permissions:
          items:
            type: string
          type: array
      title: PatientClinicRelationship
      type: object
info:
  title: clinic
  version: '1.0'
openapi: 3.0.0
paths:
  /clinic:
    get:
      description: ''
      operationId: get-clinic
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
          description: OK
      summary: getClinic
      tags: []
    post:
      description: Creates a Clinic
      operationId: post-clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
      responses:
        '200':
          description: OK
      summary: createClinic
      tags: []
  /clinic/{clinicid}:
    delete:
      description: Delete Clinic
      operationId: delete-clinic-clinicid
      responses:
        '200':
          description: OK
      summary: ''
    get:
      operationId: get-clinic-clinicid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
          description: OK
      summary: getClinic
      tags: []
    parameters:
    - in: path
      name: clinicid
      required: true
      schema:
        type: string
    patch:
      description: Modify clinic
      operationId: patch-clinic-clinicid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
      responses:
        '200':
          description: OK
      summary: ''
  /clinic/{clinicid}/clinician/{clinicianid}:
    delete:
      description: Remove association with clinic and clinician
      operationId: delete-clinic-clinicid-clinician-clinicianid
      responses:
        '200':
          description: OK
      summary: DeleteClinicianForClinic
      tags: []
    parameters:
    - in: path
      name: clinicid
      required: true
      schema:
        type: string
    - in: path
      name: clinicianid
      required: true
      schema:
        type: string
    patch:
      description: Associate clinician with clinic
      operationId: patch-clinic-clinicid-clinician-clinicianid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClinicianClinicRelationship'
      responses:
        '200':
          description: OK
      summary: ''
  /clinic/{clinicid}/patient/{patientid}:
    delete:
      description: delete patient from clinic
      operationId: delete-clinic-clinicid-patient-patientid
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      summary: deletePatientFromClinic
      tags: []
    parameters:
    - in: path
      name: clinicid
      required: true
      schema:
        type: string
    - in: path
      name: patientid
      required: true
      schema:
        type: string
    patch:
      description: Modify patient/clinic relationship
      operationId: patch-clinic-clinicid-patient-patientid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientClinicRelationship'
      responses:
        '200':
          description: OK
      summary: addPatientToClinic
      tags: []
    post:
      description: Add patient to clinic
      operationId: post-clinic-clinicid-patient-patientid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientClinicRelationship'
      responses:
        '200':
          description: OK
      summary: ''
  /clinic/{clinicid}/patients:
    get:
      description: Get list of patients associated with clinic
      operationId: get-clinic-clinicid-patients
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PatientClinicRelationship'
                type: array
          description: OK
      summary: getCliniciansForClinic
      tags: []
    parameters:
    - in: path
      name: clinicid
      required: true
      schema:
        type: string
  /clinics:
    get:
      description: Retrieve list of clinics.  Requires admin app authorization
      operationId: get-clinics
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Clinic'
                type: array
          description: OK
      summary: getClinic
      tags: []
    parameters: []
  /clinics/{clinicid}/clinicians:
    get:
      description: ''
      operationId: get-clinics-clinicid-clinicians
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClinicianClinicRelationship'
                type: array
          description: OK
      summary: getCliniciansForClinic
      tags: []
    parameters:
    - in: path
      name: clinicid
      required: true
      schema:
        type: string
servers:
- url: http://localhost:3000
