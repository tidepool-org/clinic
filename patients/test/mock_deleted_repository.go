// Code generated by MockGen. DO NOT EDIT.
// Source: ./deleted_repo.go

// Package test is a generated GoMock package.
package test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	patients "github.com/tidepool-org/clinic/patients"
)

// MockDeletedPatientsRepository is a mock of PatientDeletionsRepository interface.
type MockDeletedPatientsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDeletedPatientsRepositoryMockRecorder
}

// MockDeletedPatientsRepositoryMockRecorder is the mock recorder for MockDeletedPatientsRepository.
type MockDeletedPatientsRepositoryMockRecorder struct {
	mock *MockDeletedPatientsRepository
}

// NewMockDeletedPatientsRepository creates a new mock instance.
func NewMockDeletedPatientsRepository(ctrl *gomock.Controller) *MockDeletedPatientsRepository {
	mock := &MockDeletedPatientsRepository{ctrl: ctrl}
	mock.recorder = &MockDeletedPatientsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeletedPatientsRepository) EXPECT() *MockDeletedPatientsRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDeletedPatientsRepository) Create(arg0 context.Context, arg1 patients.PatientDeletion) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockDeletedPatientsRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDeletedPatientsRepository)(nil).Create), arg0, arg1)
}
