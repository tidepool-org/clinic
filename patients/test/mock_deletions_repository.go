// Code generated by MockGen. DO NOT EDIT.
// Source: ./deletions_repo.go

// Package test is a generated GoMock package.
package test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	patients "github.com/tidepool-org/clinic/patients"
)

// MockDeletionsRepository is a mock of DeletionsRepository interface.
type MockDeletionsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDeletionsRepositoryMockRecorder
}

// MockDeletionsRepositoryMockRecorder is the mock recorder for MockDeletionsRepository.
type MockDeletionsRepositoryMockRecorder struct {
	mock *MockDeletionsRepository
}

// NewMockDeletionsRepository creates a new mock instance.
func NewMockDeletionsRepository(ctrl *gomock.Controller) *MockDeletionsRepository {
	mock := &MockDeletionsRepository{ctrl: ctrl}
	mock.recorder = &MockDeletionsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeletionsRepository) EXPECT() *MockDeletionsRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDeletionsRepository) Create(arg0 context.Context, arg1 patients.Deletion) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockDeletionsRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDeletionsRepository)(nil).Create), arg0, arg1)
}
