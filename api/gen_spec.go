// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

