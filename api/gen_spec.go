// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
