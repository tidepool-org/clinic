// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
