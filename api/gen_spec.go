// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"l9LV4n8DAAD//4U0zaQcYgAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
