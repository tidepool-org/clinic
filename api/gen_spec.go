// Package Clinic provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xYS2/cNhD+K8S0R8WrNN6Lbo7bBG7reOEW6MEwClqa9TKVSJmk/Ohm/3tBUm9Ru9p1",
	"Nr3EgGGCj+HMN9/MR2sNschywZFrBdEaVLzCjNrheco4i82IpunVEqKbNeRS5Cg1Q7vjb5aYP/olR4hA",
	"acn4PWw2AUh8KJjEBKIbu+k2qDaJu88Ya9gEa/hR4hIi+GHWeDArr599wqfy+o05y3RqDldTQTlilC9Q",
	"ZkwpJrj1qOtf3l1kGjM3T7VGySGCsyRj/MtCooolu0P5pTYMQT+ueoJKSV8ggIKzhwIvnFUtCzShd33t",
	"eTiEodyn6u1qG+Cx3XXhQz0oFxnlFxOy0t68d3a8sQ0T1Q6qiXRBNavYtkd0zD+dO2sjh8YIsD2zwzQ2",
	"Tnsy2HA1WkNimZRrJgy9ruwm4ibvGL8nlLgoIegFT5NEorJD5EVmcqRR6VZyGm9TEVN3gyeUDDVNqKat",
	"xcZXTjM0CxnjvyO/1yuI3nouyFeC46ciu0PZq5yOz9zu2AKoj4UDn0axb4Dtnwrg+Q0+0yxPnSPluIMj",
	"vAvDkFxSxkki2SOC4xDMT0/n0MYQ/qIpLzQ5l4j/QAfAGjH4Vaw4uSyYhCE6FQwwn8/flL/zxueMMg4b",
	"+xMA40thcSljrNnwiFI5d96ehAYWkSOnOTOBnIQnIViur+yFM3fKju9RD3l3jVoyfESSMqWJWJakUyeE",
	"XLsmoAg1rY/QPCe00Csh2b8OD3uztGNTVfARdVkE1gVJM9Q28Js1MHPZQ4HStMMSKbFcKjQpct2iRQLG",
	"Nd6jNDn2H01Zxg47qYTUVzJB6Ttdk+/W9ECVC64cbX4KQ9t3BNfILYw0z1PmiDH7rFyFNfbqMtjdHD3E",
	"3gT97vCbpbsqsozKly7UpgiF8qT2LEkIJRyfmkbSzddCqFbCTM9Hpd+L5GWvUCeK88bpyhDTHZGeJUlt",
	"Iqj5PFuXspRsnI0UNQ6t/Wznybk/frfaVaAEDvKybcpkxFtrH1GPudLkc4cfXyUtTU6mE81J6LCmTatp",
	"qitue1+9IcyDZ0ex5VTHqyFilyJhy5cx0BbmkA+24xI56Nh5ztKumZ5qDTHuBEUadTuAds7U9vqYxZ0H",
	"43YVoD0dMKfIUsj2a2QXc1tvue8yMFkGek/gwxXBWPggRfZNynaL8NQEIlpMUCAve45Ryh64X61NjPI/",
	"xeQyrGcp36Ff15gJU5VKiZjZYMkT06sSTkJ50sA8Td6asM8bH16veYzyLudGBbBNjPqNPr2l7Pb6eCTZ",
	"qwaPWHjBNlM1Moeo7259Hc/EsSq1//Hg0GJta2UrSyPVmre+PYxyudLKanNdqJi063QCwVtfDb4r5lTF",
	"rEE7UC+r8x+E/H/FsuTPfkLZoswRZbLB+BUiWRrZKZFVHc3W5WiHPLr5Gr6lFNkYgG2x6iG4qO6aLIMB",
	"nPqW3tPEfjRBZd/zc9+eC65RcpqSP1A+oiS/SCmkV1hLtybL6hQURhvP/hiMFNM3eXn6BTDvxPDV/vmc",
	"hqxPK6vaeSW4beEqTbkOpyyFHLSFTCGCldZ5NJulIqbpSigdvQvDEDa3m/8CAAD//5QwVqi9GQAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

