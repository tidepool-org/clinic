// Package Clinic provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

