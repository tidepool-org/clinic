// Package Clinic provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xYXW/bNhT9K8TdHtVYXeMXvaXZWmRbGiMbsIcgGBjxOmYnkSpJJ/EM//eBpL5N2bJT",
	"dy8NEISQyMt7zz2Hh9EaUpkXUqAwGpI16HSBOXXDy4wLntoRzbKbOSR3ayiULFAZjm7G35zZP2ZVICSg",
	"jeLiETabCBR+WXKFDJI7N+k+qibJh8+YGthEa/hR4RwS+GHSZDApt598wudy+41dy01mF1ePonLEqZih",
	"yrnWXAqXUTe/ovsSxTK3Gc0U6lTxB1QQwQXLuYBWRJssN5jrQGl1GVQpunKldnPrZbRddjlP19P1LoBT",
	"N+uKBVNJqxBXA104DPJgAdvotzNvyplRwysKHVACDz8ufLSBRb2uHt2rJulAmxoCJmtgji+F4VJAAjdu",
	"EvEPH7h4JJT4KiHqFU8ZU6g75DOoTUsPTbaZTKnfIVBKjoYyamjrZZOroDnaFzkXv6N4NAtI3gY2KBZS",
	"4Kdl/oCqC1w3Z+Fm7AB0DNWGsW+A7a+K4OUNvtC8yHwi5biDI7yL45hcUy4IU/wJwXMIpufnU2hjCH/R",
	"TCwNuVSI/0AHwBox+FUuBLlecnsO9NGpYIDpdPqm/J02OeeUC9i4nwi4mEuHS1ljzYYnVNqn8/YstrDI",
	"AgUtuC3kLD6LwXF94Tac+FVu/Ihmm3e3aBTHJyQZ14bIeUk6fUbIrT9vNaH2NCO0KAhdmoVU/F+Ph9tZ",
	"ubFVFXxEU4rApaBojsYVfrcGbjf7skS1ghopOZ9rtC3yp0WLBFwYfERlexxemvGcH7dSS2VuFHPH9Nbq",
	"mnz31m50IYX2tPkpjt25I4VB4WCkRZFxT4zJZ+0V1sSrZbD/cAwQexP1T4ffHN31Ms+pWnWhtiKUOtDa",
	"C8YIJQKfm4Ok26+Z1K2GWXtFbd5Ltjqo1JGOu/EWvo3pnkovGKtDRDWfJ+vSqNjGx8jQ4Ha0n91zchmu",
	"37/tOhCDo7Jsh7IdCWrtI5qhVJp+7snjq7Sl6cl4onkL3da0PWoadaXt7KvrmlFL3CO2gpp0sY3YtWR8",
	"vhoCbWYXhWA7LZGjTpyXPOuG6bnWNsadokjjbkfQzofarY9J2rkV7nYB2vMBu4rMpWrfRvYxt3WX+24D",
	"o22gdwU+3hFshA9K5t9EtjuMpyYQMXKEAwXZcwopB+B+tTdxKv6Uo2VYP6Vij3/dYi6tKrWWKXfFkmdu",
	"FiWchArWwDzO3pqyL5scXu95nIou5wYNsE2M+o4+/kjZn/XpSHKQBk8ovGhXqBqZY9x3v78Od+JUSu1/",
	"PDhWrG2vbHVpQK1F69vDIJcrr6wm10JF1tbpCIK3vhp8d8yxjlmDdqRfVus/SPX/mmXJn8OMskWZE9pk",
	"g/ErTLIMstciKx1N1uVojz365zV8cyXzIQDbZtVDcFbtNdoGIzgPvXpPmftogtrd56ehOVfCoBI0I3+g",
	"ekJFflFKqqCxlmmNttUxKAwePIdjMCCmb3LzDBtg0anhq/3zOQ7ZkFdW2nkluG3jKkP5E047CnlolyqD",
	"BBbGFMlkksmUZgupTfIujmPY3G/+CwAA//+xmpz2khkAAA==",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

