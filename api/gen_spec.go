// Package Clinic provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9RXTW/cNhD9K8S0R8VSGu9Ft8RtArd1YrgFejCMgpZmLaYSyZCUk+1C/73gh75W0q5r",
	"b53msFiCHHLevHkcjraQiUoKjtxoSLegswIr6oZnJeMssyNalh/WkF5vQSohURmGzuJPlts/s5EIKWij",
	"GL+DpolA4aeaKcwhvXZGN1FrJG4/YmagibbwvcI1pPBd3COIg/v4PX4O7hu7l5nSbm6nojBilPvBFZbU",
	"MMF1waRFNIaZOZvzOaxRWGSUL6yz+WmJqmLaurTLzGClZ+3CBFWKbhw141jmI5iyBT0h6RZy1Jli0tpD",
	"Ch+cEfGTt4zfEUp8VBDtMEHzXKF2Q+R1ZdNjUJtBfnrkpcio9zATVoWG5tTQwWKPldMK7ULF+K/I70wB",
	"6csZB7IQHN/X1S2qMYljzNxZ7CF3ToATTIt56Ind3RXBlxf4hVay9EDCeMQjvEqShFxQxkmu2D2CFwys",
	"Tk9XMOQQ/qAlrw05U4h/wYjAjjH4WRScXNRMwZSdlgZYrVYvwm/VY64o49A0NrJLahhy8+SbsaR8f/z5",
	"vnvxlIuxDH+SVruN8bVwDsL2Tvn3qLSn/uVJYj0KiZxKZpN2kpwk4EIpHLo46+7WHRr7Z1lynm2c8A5N",
	"JxKFWgquPYE/JInjUXCD3G2kUpbMZz3+qP318VXNjvbVvLa62ah2bvgvjiFdVxVVG0gtyL4WSqHNtCqc",
	"KaQGNaGkQz6O6VLoYVCfatTmjcg3R4tnUMMb/yhMiTsQZ+aC6E6J2kTF21C288afUqLB6Xk/uvklAvyq",
	"XwzVOIcHw2yiA1I5cOTXlQxVtELjSsv1FpjdYS8DdKUoG6JvH3OjaowG0Hbr7o27UlkxpexC5Gy96Z+l",
	"HSnaTTOs/W80OS+9uOsduknKD0jyCitxj4RqLTLmIiCfmSkCM4TynHRHPUixO32EQwCPumzD0xnlb4X6",
	"zwUT7Tuqi+Tp8nsd6Mae3CHtDxHkIs/HF+m+1vAYsg0veLwNgwOS9fMkGJO1EtUSb3MCDe/5ZevrweKM",
	"4HRu6Q3NyZVn3dqs5mzOuUHFaUl+Q3WPivyklFA7cvdhBVhvlai+ktrliJijldo2yaGwqHEjdVDus1k7",
	"vtSXm71H9ww0b8H/Lg41Sa/zvNO1EYvVoOuUvk129pcBPeh6x5vfoSEl04aIdcuS7l4uzPdW0EkbdNl6",
	"e2I71H1RPJK4yZfHv2idGOX6OZ7Fmz5hy9m5QqMY3mOXorDhhLjyyJRt/vOKcUKlJLQ2hVDsb/85upit",
	"50lPT+DjczH8HNCzTZk+/DmnJ6/7cxKw8MJ/Gwq1/t3j6g+uVQkpFMbINI5LkdGyENqkr5Ikgeam+ScA",
	"AP//UPe3CWcUAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

