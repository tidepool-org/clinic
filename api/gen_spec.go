// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

