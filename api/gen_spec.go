// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"d0QAAA==",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

