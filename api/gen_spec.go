// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"s4aNV421K27e3/zvAAAA///01cZAMmABAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
