// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

