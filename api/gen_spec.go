// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAD//7F+ISTEFAEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
