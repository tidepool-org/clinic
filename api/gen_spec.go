// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
