// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

