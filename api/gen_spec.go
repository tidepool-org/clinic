// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"Xe/tx9v/PwAA//9w+gas230BAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
