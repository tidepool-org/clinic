// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+Rb+0/kOPL/V6x8V/reSekH7Iw0y0/HALNq7TAgYHUaIe5kkmrau4kdbKcHjuv//eRX",
	"ns6jGZrhdD8gOm27qlz+VJWrUv0URCzNGAUqRXDwFGSY4xQkcP0UJYSSaBGrz4QGB0GG5SoIA4pTCA7K",
	"4TDgcJ8TDnFwIHkOYSCiFaTYUJQSuFr8j2s8Wc4nv9w87b/b/BSEgXzMFBkhOaF3wWYTWooE0wGeZsZI",
	"tn+5nk9+wZPlzdPefPPv4uHDZlJ8fjfi897+5q9+qSHFJCnkvc+BP5YCm8GqaEvGUywrQ22KhK6JhE4l",
	"FMN9GkgJ/Qz0Tq6Cgz0fj4SkRHZJbQar5GJY4jyRwcHePFS0SZqnVcqESrgDrkmz5VJAJ2072pDV0Jt7",
	"6WVYEqCyUx/l+FuBhADMo5XRm4g4ySRhivOnPEmQhAeJzAzkdONTlCVS3UObUy6AdyrGDvZp5ScOy+Ag",
	"+L9Z6QhmZlTMrkgMGWPJ74bMRu/MjKmlh0KwiGAJR84or5iaqpXNWQZcEtAzSyHbGyhFu3bzbsJAEpmo",
	"iQUPVDApFc5u/4BIBpswMINtxjiOOQgxaA9hEBH5OGaaZnRJ/gVN3HLA8RlNHp2Kmzh2a6/0908e0iyn",
	"ko8RonA4A64kDB4md2zSWk/ioZNXp+1QNChOtmIUvuTprQ0bREIqhjicl4sUDUsUc44fNU0mJE6OWDxG",
	"ACGxhGF0kdhZhlNhBWgWQU1sKRXCA06zxADKfq5hK/h5Pp+jU0woijlZQ2l/h0enJ+iY4FuQIFDBoqkw",
	"atRwELx//35i/96XoqSYUGV8Bc6VEbSgXoCi7nGuVoD0EGJLJFeAoood7Qw/Tc9RD2ltCUnsxDPzEFki",
	"ItEKC/r/Et0CUISjCDIJceABgANqm7Aa8e18AFGc2fPu22RxGBd6dhNuTqeGVgtqvZ6MYGo+XECC1XbE",
	"imTtM48KtzcsZ1C9X43eWmtXVSVa9r6teaTfbrPjPUkfz80o0UTQdkCNw60KA1S5/Ovg6PPiy+Lon4fH",
	"p4svi8uri8Ors4sgdF+fnpx+PFHP5xcnl0cXC/Vw44FaSujCUN7zCIvOgadECCVpU8owyCm5z8EuV2Gn",
	"KvgzNOjzxGZwW2JeShywhHNzWWuDOavsdCh4GBpV3WyqR60ZIcfJA7wTzpnnnhLZeNOO3SkIge86gozj",
	"a6h62Pnc3qVejzhkHARQqdGoXBVGHATLeaTconJV+MG5qv13Nc+lHnvyq9aNxIp5puVCC68r7TyeW8Ll",
	"6tgG2vpWvn79+nVyejo5Pq7GlFjN7bu9DASqrDi+Z4apZZ4kXzojgxqthYesCZfvC3gpp37GKcQkwgni",
	"EDEeIxP8RwjxnfYRBhLzO5DHsCZRw6O1eNVNt32Pqrj8HiuzQ7uIZFkJ0xGKaG2hVHM7hnVLvc0Wt7gJ",
	"d/LbjBDKF7s8x99WeC4ki+1VoLUtymoX6nIgzxKGY+/QmsA3z0B7E/6Y1tLp1hr0xZxqmtHSAS2+H7gO",
	"Sn/O1gCVJVeFkuKOLHvPThteY5sY4ZYitRYtlOfdXYGjK5J4hBjjmnWBJMo5kY+X6gjNaQjQkLhifwIt",
	"6hkrwLHWnc2oHibS8pzY+ROpF5RHn5Hf4NEUKwhdMhPXqcSRrKRJgcizjHH5N0duyvhdycZtTN2xuJq+",
	"kjITB7PZt2/fprUlm7BxZn+HWySAKyeL5ApLJCTjIJCSRYUxdYL4luXS5iMiLBMTgTCNVRwg3EUCbSG1",
	"W6GjHoTBGrgwXPemcyUKy4DijKicdDqfzg0oVlq9s/XerGQ0ezK1lo39Tk+5M0W7+n4uQOZcSYYSIqQG",
	"X5I42REuhUdEPaZgw1mgpeF6wwrbwWcirP8SnxivJkHVqvO139TLKTNbP9yEgzNNFXNzowAsMkaFAdr+",
	"fO5AYUMIzrKERFrU2R+CafiNK5H1ZhUag3Vtnv1m4J+nKeaPViu2MiDQkvF6nQvfiTLpCm422+rKFtQ2",
	"amUXAEzG3Sr/vyjx2ZPL/zcePq9QuRwGS1GgaOyn1zI4gTXoi5szDreoB/1bI97iOHxB0zBu8BVMo9MK",
	"wuDdCzIzqZeH1Uccowu4z0FIw/Pn3fP8xPgtiWPQ+fT719jlgqrIjxN0CXwNHLmJXZ7G41tUqLZlr+vg",
	"anF8cn529tkUN8qiRuPR/FscfjGuiQmPldhkHCMK36x1tIzDzCnqo9yc10cWP74wGm0ZdceY14qvEnlI",
	"kzqN5h2530LGIHoYgdsjxh5dWRrvgczNpu41Z0/u9fBm2IG6WwS6fTQ1jzo8fgVZwcauj853FmGQEPqn",
	"CwWTqFZjqwtbjgs3L64uCL0v2Yla+pMF/lS/CJwWIwa0PxgMv4IskfDdrmKr+Fc0Gqh4leUeJP2exdrJ",
	"UAQPREiVNHW4GjPzdVzNtk5g86Pg/cPQZbNADYJ6/nd9ow67hJ894e0R2OOYZnU7Hn/JKzMgm++IKeq5",
	"8Xnsfhj09u3/i976Rl8kX+16qFWzZZ5k1fndyVHdrXgvLwV0gcYZI1QiyVDUvtGYdK37UmPGd+dszJu6",
	"LgcyoNpamO9IPMfYkPtWd2dtDOMEfC8MLiBla6hXD5acpcUXLWUea0p1ZW69UUNkKMMeuqoUFQ7nAu7I",
	"Gqit2qi8tfcK0y38y8Nh0KjKmP5C9YbSpMKRc00r31Bgb0R1n7lVA/ubNrdaJNva3FxBpR66nu34tmHU",
	"X8R5QWR0lmJGyzerdTp0uSGvdzeT1VXSUIsrPqpoCvI5p4WZ/jI+yhJ7lq/ybos7B9ba1dTnrEZu5gf5",
	"rJHaeRWE6hK7r9fTewy46Gesxj41oENH+yw6myx349862b1KejIWA56uUKVDq5dneNOs8spxh77UsXlb",
	"nrS6+aHLj8uA3BrzMrLj0qbu7Ofla6w3k//sMq0p9js6qalo6DVSmqIe6zoAEoQj3XusXz/hSguKL5+x",
	"0h6aJTvyQmXbxk6dToVNODJJci0M5f638Dal+Re/WBhVHLWzt085yt6cN6FDFbor7UKvGbDLn4hsk+wr",
	"g9DZvko9ynMwqWql1pibwNNjL584S3cYtuutlW/XbLTmTpzauuL1yFywYha4v9xbtYP/CW9lVdVjbNt5",
	"qVmj+fDVDLUHBxWRTKNN8RZphQVia6gEMxfipuiMJo/l7SXCFEUrTO9MfbdCctoPpXoL2w5RVe9xfg2A",
	"NThuibVmc18H7kqQje1DUsGj3nlkAp+oBciBrqPSIP6Le456ekGf1XH0giG5bAka9XZHvw8yhMs2u4PZ",
	"LGERTlZMyIMP8w/zoLklPYxiWEPCstR0fj41GvViWO9NY1hPGw1+dUpqlmfxPdZrHfl+GvfYT2J/GxL7",
	"HhLwYO4jU/07BIPpfjqViR56OCP9yzPO4jwyq28KNDy5niyc6w6tRke7awE9zOUKqLSQ1uztuhhL3L2u",
	"+HncsZpWWQYPGeOyZyGWGJ2YSZVlxUWgY1nRQ/5U/zl1jQajS2KbNRWY/xMAAP//4gYjNCc/AAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

