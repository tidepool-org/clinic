// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
