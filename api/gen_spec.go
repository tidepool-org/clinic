// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"m+rZOQAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

