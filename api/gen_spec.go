// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

