// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

