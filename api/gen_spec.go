// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"3WKOs2hXAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
