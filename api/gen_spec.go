// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
