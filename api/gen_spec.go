// Package Clinic provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"//9Se/4otiEAAA==",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

