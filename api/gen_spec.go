// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/0KSfW2UFAEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
