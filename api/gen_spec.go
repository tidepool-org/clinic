// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
