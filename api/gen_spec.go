// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

