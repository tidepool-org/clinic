// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"2DjVGLvi9v3t/w4AAP//0jc3jgIVAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
