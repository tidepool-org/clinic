// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"Nl411q64eX/zvwMAAP//tHcW0iJgAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
