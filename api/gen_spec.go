// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
