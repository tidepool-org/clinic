// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
