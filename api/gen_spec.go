// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+y9+3Ibt9I4+Coofqfqi/eQEiXLceKqrW9lSrYVS7IOKTm/nMTLNGdADswZYAxgKNGJ",
	"qvY19vX2SbZwmRlgOCSH1MXK+eUPy0QPLo1Go7sBNBp/tAKWpIxiKkXr1R+tFDgkWGKuU0FMKAlOQvWb",
	"0NarVgoyarVbFBLcelV+brc4/pIRjsPWK8kz3G6JIMIJmBqlxFwV/r9/hc642/nx0x/7B7f/aLVbcp6q",
	"aoTkhE5at7dtWyMBuqZNk6Nhs9/92u38CJ3xpz/2urd/FokfbjvF74MGv/f2b58twZpjkDi8JAk+phrx",
	"EIuAk1QSpjDoY5lxijgOGA8FstnRCI8Zx0hGGE3IDFMUgsToO3wTxJkgM/ys1TYU+JJhPndI4Dfn9nrM",
	"eAKy9aqlqupIkuB1CA8kcNkYZRhLzBcwJrQ5xqa9LXDGET+mMIpxPYE5wTOMDHcIdE1khLDJjo7f9RGh",
	"Ek846Pz1ODr1u9hZREaMxRiowSQBEhfsWa1Gf6ztX/5psW+EzojES3m++LyK4RNCTzGdyKj1aq+ujZgk",
	"RC7D2nx0qwvxGLJYtl7tdduqbpJkiVuzJijmumo2Hgu8tG77tYKrqa9bW18KkmAql9Kj/P5UJIDF6BIm",
	"65A2We5NYHIW42WE199qeNkpLjDwIFqcUG+yOEYS30hkcqC86rp2bCVrWoqA4x4Ll2JbZlhTEauTVwPG",
	"JWI8xBwBDRFIycko0+J0Z7KD/qkaQYyjjvqxTEzpquuH4rv/edX587ff/vnsu/959St0vh52/v3pz+Gz",
	"f9YOSiYwX8oH9uMqDvgHx+PWq9Z/7Za6edd8FbuXJMQpY/GVqeZWk8R8U0UPhWABAYl7uZ68ZCqr7g1n",
	"KeaSYJ2zRLKGqwrUfs3zfWq3JJGK2co2UNFISQY2+owD2bptt8zHxaGy8HYFHwhDjoWoGVrJMZbIft9p",
	"tauizqJl8x3aehYGpt0KgJ4RpQU0E3IM4Qcaz3P6VyV9uxUQOa/Bn8g5UoOpUME3kKS6+QuIGTqMJVuK",
	"oCpYi5YmyIB81WhhqgTjr61uZ//gx1a7tf+i2zn4Uf160e12ftS/9rrd7j/1kNTXdanBZV0pZzMSYj5M",
	"OQSSBGqORRhiGQXA8VDMhcRJq92aKcuPUODzYZCPEpMR5ppdzTzHXDW8Utu0WwHLqOR1xDMfauh3NThc",
	"TjlbXV1LpWmx1JhYMtJlJSRcN+3UVGu3YhDyCMdY4vCiEOfrijo5b3MpUCXLuRZPY21ZGcpbPj+ROBE+",
	"LfRnpErU0aNUM3oqEVN+EwxtlcA5zHWNEaP4PEtGdlHgY35Ikc6psNc5ETVZVQeatV7Wr5qr7bTOgzxM",
	"Koi2WxklXzJsy6qBVrgzISHO1Y6P+YX+hgIW4h10QjXtr3YGO20k5ykJII7nGvaVpDoTElkQIRDo9x8P",
	"nnf3flfqxPzs7L3sHvzus7P+sJShbdtW3S0OIsdjzDkOX0+uKDErs3wuJ5Pd8FRVnLB497RWCHi61u/0",
	"25iNdM8MtZDOaro3ZhxBzn3oMvI+EoGeowlnWSrUSB+gLE0xD0BgBHEaAc0SzEmAggiUiMFcIEIRhiAy",
	"pXbQYTIik4xlws1TkPTkd623f9/7va3p+sGmu78jhYNeE4U4VDR27aPD172j4zdv3/30/vTs/OJf/cHl",
	"1cef/9cv/95/fvDi+5c//Gjst/vL9Y86aeJPzIEm2rKRFdJqn6qOU+qUcaQlNQ2Wc6RgCZYRoRMUkylG",
	"v/cODSP2ICZjximBCiP2DldoTIVMHZZZmiolisNzJsmYBHrhtHYmD5YUU0KFGBukxEtBunvd7gJ2a6W1",
	"Knnkks+t9g3HeJsqE/yVUU9pHo45CWD3cETCz9rCyQFBwMFJhiERw8MRjFxgPCFGSOUAkYBXSiTYTb+G",
	"BKbMTdNJRrz05yx20kQIyJx0DFTOOXYgHL5+hRmJYxeYfc6SUea23APCmZsUMIqBBm4WnEk3yShMtTa2",
	"gCOYAneTfIjFcAAxQOKAP5MRy6TTqSOWQexUfBwPD4FkDq3VaEp27UDewohxNVIF5B1wcDv+E4uAUixG",
	"GZ840Mwdn/eQpF7T7yPgkmUOuu/JBGLipqmIQDhlTmHCnCE+JSOOK/Q+ZYmbyoCGbgXZKEtGICLiwgRM",
	"nTxnEMOIuek0k15aYO4wwpliRJc8Z2wCIRGRm4dRJWacVs4VE4wcNM7Dz5Bg6mYhkGBn0M9ZBtMgYlKW",
	"sA8ZTCBk2YQ5rV0wLlnnnM0crAfAhpcebS5JMsqm0il3yUnK3BG4zChx6P0zoWHE8FRBtPJRcxG8JA0i",
	"xmGCPdgkI7EZ+gIkySTzIBwmGRDqwyaYSkLVJMKUieEh4VjUZuiBhAR4UF+8xxIW9skMQrBjUJOFh2xU",
	"/+2n7HM2r/1yCsM+YZ/ri51hGrKv9d/6hA3fQhxjy88LGQYQS1jyhQ5/yox4rP14mpH6Oi+zIEuWFLwS",
	"UQYV2mQ+PURGA7OZV4AkmbKpX6OcuoVeQ0QW0sPXQEPMQXgf+AhCjxivcayXSE5aLdgcgBKanQGMYg+r",
	"1wyGH4nwyPeaTVgFQIRXVz2H9SAZcRJO8PA1zH14yoZvueqIB6ZBRj0AhwD8Ghc5tQdzTKlf0dwfqV5E",
	"ApgwHxJlEHmzqEeyEELFHhx/deGMQzx8B3zEMu7DK1zfU2bysE98/DgW0qNxLyPgl8tUR138joAmwKci",
	"ghn1wNeCLQKGPY49wXKE6QxzDyA501umBYQlyv5z0TgOE0Z9VI8JzyhOXeoex0pVziBkbgPHVGAKoVvd",
	"G8bl8BzHPsYa+jPMvRFTQIixN9/fxhBUOectC2UEIw/CxEIuxVnDy4xPPWAVv7cZhDhmmde7txlInEBc",
	"yTiHL5neDC9hc/Dk7Ttl0MKNB5lVsmCeMEHi2B3pExoSoMX/SoWIms/vKbupAZ8Bx3RSV9+FPhXLjYrK",
	"x0scx0O7v1P99hHPoBau7HxlqNR8+5lQSCBY/LLYnWxG3GE5+QJx5jHmT5CAz5dVFfJTRrExJi3gPaYy",
	"C6bz3VOWEVHYNNWvZ4xKEmCf/oqww5NzF8IhxjQkn108T2F4Aa5UOCWJi+Opkn90gmOPPrX4nLJrzIcX",
	"XNHTzXwGASbMA1DwFb2CZH4ZTiZM+hBJ9GLZA0pIGGd+0a8gY09OLirdM0yVnMBeZZiT0M8kY5iqyjzg",
	"DQlYlcnOFGK+xjljNJBViMSc43kVNiMhZhUgxxBXQAJzDi5NziFffeQAfD38hXny4ZykZOKhcW4NviLJ",
	"GY3Ah8hoeARTJpWCzWKIln3tYdWlZV8VOgPwFfZ5lrnoffhMKEzc1i9AzTkfMKGEy4xOPChXKpOMXMJd",
	"RAxT4goUZfV2IOsYtqx8GLLxcJACoRU4Gx4GHC8AP+I48lrLsAL3SeBDqYThoRLLLlv2gdD5sE98/dUH",
	"OiV0eEJj7A5sHwdkjD3AxDeD+1iwOJNeHsKGrzlQD5s+E8C92TcAhd+JgBGOq2DuDZUCEd++UCA21Dq2",
	"AmfDC8g8CTQIGMdiNBeZPh0vwBFJOQtcJhgQ30AcyOFr4DJStt7ch//EIip80HsiZQV0mgWkUuFlxBKo",
	"ZDOi3yX84JqM5bCXce7DL/EkC9RKNHWrvYwyTwJeRpmyYStq+5J8znyFeammnGQ+RDJPznxUA5n53PKR",
	"8InHrD9HROKIcc9q/ZlQSlLsTpZfYJpJT3T8otTF9ZRaNlNjH0i78WAEVAk6gplRdg4oUybV0RUvlED5",
	"7QyCLxlwsgDObTwHFpxlPGQ+8ALixHS7hPX18Qf4wAHLZDS8YFUEBnN2Xcl6yVkc+6CPTEimuVADdk8Z",
	"ncwx8NEcaywFUQtZ53ecgJH5OpVYU1wnKIRzXqS+SCOUbYKNcJES0QRGZiBsehrBCMICIOe8LPwaJlFY",
	"fnwNEbfCyiSnTk46mZremCSnYPapdBITnhWNviYimuIyr7KESZ7qQRxk0qyKdDoiboKREcSi7HkvYnTy",
	"hRjJbAAZnUxdAItZYoS0Sh5BEECZSEAERvHrdGT3XHSCxAVWR9kInISIgJZEfQMJTDJRovkWvha/1fKm",
	"JNk7POKsTLFhLyLDM0KjEkQnw/esRP8dmxX0P+HTTIqCcCdCAh2VVP4JpsBLLH6COaR2i0+nMc9ErgwV",
	"4D04hd9DEkQgy+6/V4vEiJRJxTq8TMooARpmDsBPR0DD+aSsjsVTKJF7z0FQNgdedud9BjEMT7Mkzcpm",
	"siByxvJ9dg2k4KOzfG2XJ7IyMYGwZJIzmCpDhZdpSuIClbNMBOWMOCcBE6T4eM5mbJp9pdihu4IJMiIO",
	"7h8S5zeHgqoXEWXJ8AKXA3yhbGWgUGS/mKt5D2Un/wWyRPVfauVLoZj2/5p/nceMhwWCfaATVrJUn8wh",
	"LBobQG56mdQ0gpg4abUUBlrw1wCzkiEGEdBJVHL9gNAJpIwXbD/gOKR4yuK50/lLIGk5mS9BzXRaEPdy",
	"RGIiys844uUoXeJ4eDgjsyIdkWSUuak0KpNsOmdlwsHg6nNGJ8MLoKFD06sYgI7ApexVDHT4GiQrITxL",
	"vhTIXQnZOcfl9PlIsB65ov8fYwjJrBDiCqTVnHCS1CH/L3gK+lg9XzsaIMczQwO1ZlB64PArs9s9OeQ1",
	"5klmhjwH9YCC2XovISkefsTcbP3k0DeAOatAKoCfgA7PwCqdHHgGISbca7KP59PPYFeZOdCowLeY8Qnx",
	"cg/k8B2O7c5xCQQaG+2eCckhVhqnd+mnQxwDMb0ogK85Efl2tgNkU0yH74jRrAW8p4QzN8iXwIxbi6AA",
	"HQG/NrOhAB1nQeyXe8dGxlGxBJ2+O/HThIbYauMSyHg4fMeu/SbPcDxiGa905Hzws59WaxgPcoGrkH9l",
	"GFMR29lbgPV4+JB5SCskvwSRACV+Rz+SQDJeAf6Mhd/3X5RVeE2oHtfXHL6SeNeuVWzqCJcLOgs6Bl2L",
	"Tdk6e8dq3HuDy+97R/oXUAiVAWJ4pYSoJZ4RqRagqsOcloAzppY8xIGc4+sxy2ho6WOhFxCQsVv1AMQU",
	"ZBDha3AK/5JN9aztRSTGuz0lsCmm0qCgYQaDk5z8PbMnfax7dDywf18c634dT+ap6u8x0VQ6lsHu27PL",
	"8tc/u87vPfe398H7su8k3N/Pnd8Hzu8Xzu/vnd8vnd8/OL9/LH93HCw6e+5v74P3Zd9NPHcTDlIdN5eb",
	"yc3jIN5xEO84iHccxDsO4gV6HGN6TbRjokpf9XLiX1328l9ULYuFHmGV/ncWK01znHGW4t3DRI12qM8w",
	"cxANmZEwOUBNkGmk2SgHyQjrpaJNv8bx2EyEEjDhoCVdAeFGP+dpDpKIGGbgwjIhcOxWnAURcOxVnYWQ",
	"ViCC0Al2Ku9FRBAKTkd7LMU0Ai/XUTbyUHpLRhxio0dzUIY5NYs2C3mHY0HolJSQExHjIRsPz1wKOQas",
	"hfyEuVfRe2WvEKrI5AAJnrkpztzknDipUyJGzGnx9HM2ij+bxXAOYjT0smQ3OFFCelLCziDkJHTT5hys",
	"SHKCI0icWs4I1XZAnmQU9LZIkRYBuy7TpdVpAR9E7GS/AE6cAb9g4YRxs5ebgzhMMoeT+mTifO2bHTeb",
	"0nYfuGllAHBCmQvj8BnPKhDpUnpAkjHmLGXO+A2mLP3sNsXGbq8GkgXTiMXOTLqEOCbUodwl4UbRO2nh",
	"NXIVz4GymUvfq6/RhHHmDNFHCLOvblKtuZ1mlDnnssFHElOSOUT+yOIJ8xnvZ+ACnFH7N0w4HrnplHH2",
	"NZo76P8740b2vH2t/3SsHjA6IJf/uaC1csuVWe+0PlHrwqlZFp4E2Oodcxawe0jVEoECJ3q8LLQXWbeE",
	"Is2JkGYLKgexwMvBEsadGt5jPsmUDVeCziDCbioOyQwLF5JxIg0dC9CcSemU6uOMmhPbE2P9nwgOeiuw",
	"PKH4CVL96f01fIYYawF0SkZz9e1Mq9mzgf378kyrWbMtvvsaPoMyn7APGuglpQW8xRQbg+L83/pPp/fu",
	"UNVxDjP4rAhw0Vea4WJw+cOFrtwaDruHqebmIpkFUzsUOeg1yyZAaL4rlYN7EchIK5ASYvah87QxKVzA",
	"2DhlFWkaYj7KtNGfw97AFNiYuRDymbjJjMLY+NrkoLcQQ2pZo4QlI+K1/jaDEOIAqKaTA3X78I5RFhtV",
	"mYP09qg5dchB74FWAETxSAIeWu+Z4gIX4Ax9DjuDzxlnHoB/ybAAtzNnJLwGl0rnkHEXx3OSuQ2dMz5m",
	"8dSDZAl2B/oCJmx4YXaiS1gMbq0XRAZAuIvuBYuoWQ2XEAop9gBcDs/MPrUD7gNnktGJi8QAiJkUJSBh",
	"boZLiIhH00vgcO3lUFVKSF28L7nHhz/DFHvJ2Bw05oBfIFUplvM94zKbaCbpf+jpv+9b7Za7WXCZ8anW",
	"6cbyuhrsHsbK7s5/40yamwMqxclXRu2n0vC/Guj50bGHnyXELAOuBrvv4BoIMb9trs5AAteduRrsnpEg",
	"IpO8GWfBcDVwlgVXg4Koxjh0DcOfO4Mr9Z8WP9pC/LTg9HmZ+w9WfQvbrZuOkCyNySQyN6TC1qvWy0hm",
	"1xxmGftBmDtlWRre3Y39Go8EkX4FGSf1F4ecKx7axKHGody9huPcl/Ad7X18Fz0yrb9njSPzAumW3xxR",
	"zLHgKHsZYfQ7CX9HCczRCCOcpHKOiOs5T4Aic2MORSAQZRKNMKYIggCn0voQe1dP7uUOQXErcM19P8UR",
	"E9bZ4g5C9eqPf29wkU4kzK8UWHKQMSJSEYX+d4UmdU7A9TcVVMV04baCmchrLoVwFuO1PsTF2Pd17vuZ",
	"GhV+zwfGILSKtRfYdeVdJwLU/Ojj2Lg+RyRdvHkVFBej1hOi5V6Kbky7hR67o2Sbr+taDfabdbb5nZNV",
	"bd42Qm3hCoiLWj/ntQKZ3K27d3pyftIbHh6daScVmzw7Pnt93Ncm4PGg1z9RibqrFSuu5Ci5c4F5QoTQ",
	"Xu+NLqgURbegXN1lHfNx08pqa9KTwl4NWmRikBILqQdjkI0SIiUO6+5Lt1tEWCWy5HuMJxDMe/7N/83k",
	"YOqQvdldJ3egbl1+071GebdruP8IJAxYxgO8SJSw+FYnkweaixDHKccCU0M8JUcBcSx0MaRVcQI3uRzd",
	"P/DEqkquuB+87GqKwhkZxNAH3RN0Uivz8U1KzC35XNyuouURSKzzqYnBQjImpZhuWi6/mnhutU15kyPE",
	"NwFLfHLsdbtLr1TZipbejCuu3hS3IjENjUa2v/o4YJSqcW637C+tGkMi3CTmnOlLkCWu7meP6HZY7Xc1",
	"3qL+0k1FYOe5PPI4ItsyKArLRlYza3OR4DB4jVgoxm6BvX/tv+mh58+f//jpu0jKVLza3b2+vt4hWI53",
	"GJ/s8nGg/qkcO/JGPkO76NeTwQf0w/fdvUoRwXQJIlhHfe1oVQ801Oq+YyyAnUgm8TOkIEJCkqLhNZHR",
	"EOVXeRChJqMxSMux2u/uvex09zvd7y+7+6+ev3x18P2/W+0lYSjKscS7l3WhKZaZc8fv+kdYSEI1Aieh",
	"WJQW45hdiwjjmuvsTlF0coTYDHNO7B29N3kxsd7kokxisVn157rIemMOiyyWG9bdt4Xaa6NVuHOhpFPZ",
	"bN41Z0ocmYgVqI9DdoNCHw2gIUox7yQsxHGBlFiYM/Xrta/fB5/51/0ufpHMMo3f8bv+GwhIbG+I+wNb",
	"bzl/4CHWCiAvqCUVWisKaGXqF+02w70bz7+Mf5DjUNKsm+N+BjKIzrAQMMF9JQrqNNmZopUrMHUPas2i",
	"kAVZUoTsWFQrM0xl9VL6Ob6uqavS+RIPtxavQYc0NT1rRiTY2997IV/MSPpcco9Iffwlw6LGAEo86q0S",
	"qDVYuSbH8bs+0t9R3lYdzlZ+qaZv6/tAv3STOHkRfgnH191KH0TKqMB3X4rY2+VNrSy9fhNYSkInogGZ",
	"BnnW+vVLy6msZtSLbjYb8xRPp5+7P/IY6Lyg1wVnAQ4zswVSI7PNUvEw0AEO1obdafv5D2loQgz1ccq4",
	"oWKT7SI6es724eV0ikdguDMkQtUzyJIE+Nypbg06JiTSYrHKzficCPoas5bctggaKKtVSBIILVIvjt4g",
	"Ww0S2cjdAVon4V329xsU6AzShoM4mb8M2Z6M4uT55EU+iAOH4ypibUElr+HIig4vSFhj3puhRYwjOzp6",
	"f2Qx+NTiCmjsaJI1+BTCX5ncnJ6EuVRdRe560t28PGD8Oj14Ps9+3DNRjBaYfw02ldnimPOuoL/RkUa0",
	"8g7ZzaLMX6Jzn+/NIvxjNIIvnNrIP+XKas0GTxnIKy+z0DuXfg7evlxBBSs1Y8ekS64P0m4y3j+gI8OO",
	"erGwKEdsdIbCLD3oHizGwmrnWsZfGVk9gcNi3SjQtd3q1O4va22KwGzw5rW7ndb41iwl6la0dvebhJhK",
	"tfrjfuiB/THeP/jhh/29lxgfPMd7o338w/Ngf/wQS1yLyslR3dLvrH++XCaUdFkMK6e/oLP+ObqOMDVh",
	"8JQJxzjS24Tqd6ET66a22fOpExZjphaGqmqTh2Ih1DpRSA7E3XpwQ8+5Y1j8LlpxhlHVuyHv/vDy++D5",
	"l+nN/DmJftStnWEdaiUiaR8rYgZ5uIVKCBiUCczRZ6ZdNooYIijJhESJtmwgjvMN4xCPCTWsm1cpFnbk",
	"9Q7tEUuALDkDcEojSNOYYIEYjYujAI1RBEpLIV1ZHj/KhAYEg5dCNzStOAvAiAlJl2wi5EQ/CdNFxE5U",
	"20Q40ceIQALLNgKpsVKrSkWHnFTlBnqJtKbaCCPIZKSmVWACL06AUCFN/Wa+yTkqpFajHW9LT5dLigFG",
	"7gjXzP5aVhDb8YJEMQYhkVqkW6YQKQ709hFKSpRWcgivoNFoa6OeoRd2OW7XUUjUk0hCnaC3hmJNnMOy",
	"Ee1VtFgjya2GVduvdzu2upezL4VJtp76eXcGJvt9HXuWkewW5YTmxvIgzOw1OweFYCxzJCOQiGIcCiSZ",
	"mn6J3bPe2XCzogjv1+hQqRzhVcM/KMi72MHAXBlDZgjyfiZOvbkZdnF8fnRy/rbVbvWvzs/Nr96Hs4vT",
	"48vjo1qkkG24TqPmea50xxYZdEuWqNkGzUQtcrbhVXTbQDAU9LqtaarupOkeDkZGhMvoKN+Udvcn9zvd",
	"HzrPu9VdyQeLfxfeeZuYZnGsbO5KEwW57no6Ps7i+HzpgbT66p1Kp8X5zZoF8Tan7jEIWZjgR/qUomf2",
	"9+82CqreqzRmEPZxQmiI+d3qS/gS4ynBIQkgttGdbcC+jUl3x0O3dkuYPYWGhe0OhJ6gMNkgpqFdt0vg",
	"EyyP8IxUuXwxGliFee/fA0Ef8xU87YqChopjxQGl/fT67dkF5oTVHUTazRx99GhNrwC9fntmDNRUF0Pf",
	"WdUSz1+hvbCNXoZttHcQttHzbvhsMXzrDHOY4CMg8bxvoobXWIcmEwpVLqRIZtcnhfR7vvOi6JLhy4pI",
	"GMcM5PcHqqM1TR7hWELNmQQZjzHHNMBohOU1xia2Xk0FiFBjY1siAA3RDHPFs+YTRixNmSBSyRob2LrA",
	"fn9z7N/GWcAEPktYvJxeNpMaMF6Lp4vEizshsRUFc/xqiKcpJiMtXxS5cmpuS7YIxGE9qy0q2DJvhcq1",
	"WdUUO6HvyCS6wDzAntW+LOe65k3OU3bdrMpTdt2sxkstzJpVavI2q/cj5vPmFMhzN6+7MSVs5rU1Mwnx",
	"ykyyblQr293mg5poSgcqEShSZVMTiiIyidDEsjcHqmPJFYzb3XnenHMXMNlsqi0Uv5uo6u7sb4H5Usmu",
	"IzQbI8KRUKupt9ddjQGhsrb1bel2LyL+xQY4+9zenOlidn2vPFfisQ3pytKPzXG+AGjCcCsptxG/lW1v",
	"SbNH57YFndCc4YxtfK8852GzDQm9Ch6b8xZ0ZhPmW0fFjfjPw2B7+j06F9ZYEM35cIb5/P5VbgWlbYhZ",
	"qeKx2bHG0GrCkA3IuRFPVtC4CyG/CV9uq481He9bKfsIbUvLb6ecFy30xix5f1raR+IORHxMfqysWdaR",
	"bRviOE1sSBSn5N2I0QhVZ7d9NElMOzuzvSbbWvmjQUR1COILbzeqwc5guT922144xEwgRZKZ9ytElqaM",
	"SxzqHTK7aVnuuyzgL9Z2YCBB1p6dCndjLhOYC8UEanKrpvMpM4M4w4snogGjYzLZbDe1Z8qYI4DGpLOF",
	"j3SR4v03Z1g2Ib+we8lbl9Us+45lda/T6P0BFKmP5b0LHObsqz7Ec3125pzxNGVXXWz1YPc23YTt/b0J",
	"+/cm7JPfhLWSSMdTxtoNm4Yk0DHVaqRaiDmZ4dDILXQdkSBCOMliJT7Q4V7PxeLlvWCxGf2W17MtLV8+",
	"iQ3ttytHaenma+/t2ZXAZ4RmViOsydlkQ9fkbLZPrJYHTVp/sL36Zo0/1KZ+s9Yf+gCgGRaPcFzQHJFv",
	"c7awMFuWmvOJyWOXldcYuPWQmySeHO42XwB5jW+++vGKP9ZSfEFoNFyHLyXYxmtvD4NtqfZNVt0LYvSu",
	"zLa3Ka9tvdL2ij/etk9FljWk19qjq00mqYfEtmdX9zJJ9zdF+u8j07+PTB/9yHSr6bpyS3Gz2VqisOXJ",
	"3yMr1L/Pmf8+Z378c+atZum6E9LNJqqHyPZHpI+vWv8+qf/7pP7pnNRvNZMbHC1vNpkr2NzlbPnR9e/f",
	"Pg9/+zw8YZ+H7Sf4PVrVPi53OKn/JrP7b8+Rvz1H/vYceaKeI0Ezz5HefXmO9Db3HOmt8hwJGnqO9Lby",
	"HOn9p3mO9O7gOdJ7Ap4jQTPPkQcIJJyWd5Yb0Grh0mJ5M3QxhPByrDfpYvPbx8vbu22A1IoL3Rf+rdYK",
	"wTMhWWgjMS90izJzlXvhQ6Yv9dZ+mhF8XfNhsRP1oYUXaDoo79SuFBF50JpcSoTmjUa/u6NJUgicZm5Z",
	"JvttWzH5JkUL0eb2PMfR4L16uvhSaamzlWm20EVKLwUQB5lhDWQEYVaETvDJoVYV1qfiMuJYRCyujTph",
	"PykxHOrgaSGWavB0RBSiqG88YYjQC5VWY/MpZtf33H6sHyNq2Lwh3kfr7tKQxq1GZsfMLpHuuXvFYrB5",
	"J2fGqnsIRDYgtqsuNE824v4jqF3maQWNJIdgahHNRYHD+wvcPiZcyCOotQBBFpEWdDZEaBBnYe7jtTSa",
	"bvWifQTijdtMrR/GKTTIYOIm5ME0arN9yKS+Sj/QD7LXhyKHJl1WuQrSbdxnE+VBY5Kj27ApM0obt9LH",
	"IOrm6ykR0iwW1Hdh4jBZxrgGgWzkAcUwrfYG0RLiheGorFNMfAOlcu6JpMyO7LY9TYCrmZFXs3GPWZWz",
	"1k0XHZXIWAUIxmrRlnNeG3GcsBkObcC5giQbE0Mjc0oSUrNlcZWmqk31MUfMmx1WcEmGUq6j7iJCx4Sq",
	"5dqXDGcYhaWObIKVI860MFotzS5hsmh6kScVUH9lEP3lD6dImKCQiDSGObIR5lzUFmLbu5j99lv6x+mt",
	"+nt+O/znb1m3+xzrv0Hn0x97t973334T1Sz/xz82eAaoJtC8GpSVQ2bjqRazprJJVlZTCRd572PjNlUf",
	"DnIhWFFtSaTERrNXPC6csMibLF/qhEle1/KgzaHVUE0DMCd4fX4dgq5m2SGWBlVWqEaM4nNjyLghrP7I",
	"rZtXrX/uoe9evHjxDL148aKzt6+fiLX16GCEt1WzgxbVrQk/JBsEvl0IpW4qd9lbdQGd58bYQhcHWaqE",
	"i8DhOVM8G5SBxep3kMYQC1ztVOouRE/ojMgirF9NkM8ct7Jt5Ddeg+clCXFdANOUcS3iQXY4EdNy3TcC",
	"VS+j5dWTCWdZquRpwInE5kXobfaJFCrl7pDzTsC6QvnrAC4NJAnxEm3htLNkZ2T9UzImoNeYxBLzRji+",
	"sVmVSfnNl4OeofWGs2RpdKoVscb0gx5sg5LfdhGaFtepyoh5L3V451JTfLcX/vky/HPvIPzzeTd89o/a",
	"12BWL2YvT46Ot1rJbhWb7O/l79LlrxIAK5fA7qxcVJWcpSd0yZWJkoGMqdTdeVHhIwP/P/80/5v/ApsM",
	"nv32W/jbbzv6b/g/tUxW6+/+OM1WvQIfq9VvROW6Y9qHbrnCpVaLrGDTpTFD/5OiY24hACuEtOitIKSx",
	"FJaHYH0Ktzqfxh3Jhkc+Lnc+nYtN3/KS0FO6APFU/Lv/9lu9f/e2J+Yz+CQcnSr6wCwhm2qFld4djTZn",
	"FjVMgwDX7jZDLTlrJnN7hX1aP+fqpGO7lWAsCZ2YrF609JJ8q+wSR4FvsseaF0WqLDo52kEf4hAJOY8x",
	"OjkSCDhGe91OSCZEImNUmBdOiDCPqIzNkx0RvoEQ35AkgBjp3GIHnePrSlXPv7dV/Xp1dXKEZgflo5GY",
	"7lyTKUlxSEC/HKlSu8Uj7vF8aHbthuXW43/Zpd/wYPgdBxqy5NmzinX4a7fzI3TGn/7Y697+WSR+uO0U",
	"vw8a/N7bv322aruySsXGRp8/cnVeQYo3FZWrTQj3dGMz6y6Bm/z94659i7V8D3nlHKnfOb0k/ltRkmDe",
	"3et27RPy3f3y5/Py50G367+/6hXzHgQaYD4jAUaXpO6ZlHbrkpPJBPNmT22sDOjvSK2FSmsmnjmdW7G/",
	"WHlPYXnGVSO4rP6FhxaW5HNkyWqEl/YwH2G/O9JCV3OffSfFl63+Bq7TyFIUFPseYQkkFpusvZq+YLfY",
	"SLvGn0fgIONEzgeqd3ZMsfbnuWRTXPusUjFvbUYkdc52i6jvEQbz9I85b2rddKTN37H5O3n+fCKm5D2e",
	"t24VOoSOmd3TlRBIhxIt67b4f+XVKYlaNpMjpSY0V9ndl3u9IgvekT/jERJ2PuoHV4RkXLtyFy/1Ihix",
	"TNoHWkS7fKlF5MFXCHdf3IpJgO0hicXv9eCos9/pxZDpQwsfxwmRUTbaCViyWxBL6QvTzO4oZqPdBITE",
	"fPf0pHd8PjhefIxeoMOLk5beKjN7h629na6W0g79dSebN6wPblNMISWtV63nO11dYwoy0oyyO9vbDbyX",
	"4id1rwb3scw4FSi2590QxyUBbQWIu35wuWkr5kLiZAedqDUdhRhhGqaMUFnu7nF9lqAfPMt4ygQWOy2N",
	"NLevI9qD9sM4dh61V53gkGCzPfdr/YQvs+xa0/q2vTanPr1uktF5T2EggW9a5piGrdtP+iBDH4Rp8iu1",
	"ZCePNZX1I2RGGO5+tl4IRpBt/rD/Eq9G/42qhdn14b2RM7kHoHF7OIxj5I2H2Z/5NWfmVruVD3rrkyrv",
	"89ruH+ZBo1sLW898UMN+ongIjABFRCXNO1+IjWuZyCL3hvEC94dnpbsO8pZjK5oPZi6A1Hx0CVMd00+3",
	"mxLLPlt1+2kFBxA6IzI/0Hygynf/MD9Owtvt21k/4nkjq3Gyb4DVIKIVsBLPpV4sHv4qrRVjBZcMUjUh",
	"PrVbKRM1c6kQw3p9VMhiyZB52RRRfJ2/rIdvUsyJ3uJQbAFL3zjbQfmZPrpm9L+l+8oZyqgksfseYWhM",
	"Gb3ySllq/bKUDi7eFlMTGd+oGUFkPEdTEkxx2GHjMRrN0Sgm6aKCMG/knuNrw6nHBe6tB597jWaZfcO3",
	"lI3NpeVKycgJnpn3gHPhGBQVLpV+G0u8xiqxuWgUEZgHcx9L064vgSN+bN/3fQSRvVQ6t1sH99iYeXa3",
	"pqnXEBbvwus2nz98m28YH5EwxNo958Vj9LIQeGq5jjnKMy7TgHU6T1ngnOkn8n/V5/cXHz6cDg+Pzk7O",
	"W+1W7/Tk/KRXTZr/Tg7PjcqsFcbGXxWBI3QXZq3J08s/cjNgr1k4fwApdvsYsrLtVXKTxH4d1fXt6inS",
	"hKXXs+DmLGOHrhiXlTxTledG9g0DFuLdPwo5eLtezBeP3hrq5C8O6yqQfXnbZ5+32Mr81/NBIXCfhkZ8",
	"i/NJp7S6xg5Z9BpYnTV2kvA6uMxUWr338qkyUn/k/l63ZlhiXOtYr+HlWsS+Fc2xNnIoQ4F5xRGH+Q5D",
	"bjoJ9N0ICxJigUKcsAL8bNHCMY04ksAbwoNFrM4Z6tkx9SlvalrBvLftpow4mhs/6CVc981Yrd2KCZ3m",
	"llPH3+LwkS2/izxf6BbwWS/3ANQPm//DiuOdLxnm853iixGl31hElfPrgXTaRhZk4Tep1yZZ7dUBfW8D",
	"KMI39hxniU40OR9HJ26qrW6/mXD9Vgxnd581E/j7zr9+UoNdcqQd4XthygWdWkrqhhuay1ZO+UPxO2jF",
	"EmqrLUiBgQfR/S6jGq/MzB58g4xqAB5py2rjDaolO413FUert0rcXZJg0WQ3G2XLrXbz/eGEFNFHhMsE",
	"zxraenbssi2/JjMthxKga4ylvr6G5m/cjjlLCsBKyyen5sY99Yye5Zub6+yeYnc5lxYTMjO+P4Sb23er",
	"7KHl2N8/Q2xggN/XXm85q9oN82p2WWsTVAyCuhnn2gRPesZ5SnDzGYcjvivmNNh8D7uByDukiCxIPeMy",
	"ek3iGKWZiOytWomFLBYz+ZVX7cwgpD6WoSG6OHpjD/fMwQKoKoqd4oihCGba4INAkhlGIhsV2Oygywir",
	"DxnEOoYEIkK3j0MEigARZ5RlIp7voEMksiDAQoyzGOVDghIM+kYuSN2EUwZJEFMUgUAjjKm+jBFmsT2N",
	"1PF18o5Zt2Y71c1yux7d3+hv9GdFI65Pq9BB9wCdM4nesIyGdj1Y7IAzLBBlstr/43f9fKWoqlzg8cGc",
	"Bsfv+kcmokaF9/ZrhjMIcCpxWOFAVY1uy1a0aidaWWQ5S1jXmuW8mZ+0+PbX1ly6SUN3Ot3ZRGwtO99p",
	"jl8JXaUla60Pk1lxjKktdFSoXYLU684Tk/1+VKitbDtVWtsvnuvXhW7t1OnShr35Riq1KXkehUe1q0cQ",
	"NRwHEIIFxBi4JWepD9q0WRyMw7xA0dlLdiW079BDqN+lzT3KwrspExRYliygaGjpsomyz+VI6twCf0Bx",
	"mjfztISpXY5HJB1yLCQnQeGf2NBdRKneshbk1mLsA23cjDDCM4gzfRytY2QYrkefGaHlckVr+g80zs/B",
	"EYSJ+h6Y83AshPH2z+dVvS/TWYFO3+3TA/LwkhYbL8DL8qiC8n2vxrOmlqlkNpRMZeemOshLFgsrxuD+",
	"Rddy8t8+zUG365Tmw7612biRM0zBKvfiDmPdqbWEIJRIAnHphbLANjb3icno+mA/BMcsuHo/NK+4Da1l",
	"j5xydVTbwLVlkQ9WynYtOststZLV/fzwxGo2mYoNpKIcGkiQ2VpHoPajTwmDIXav8wpzK8dz/yp9vxZG",
	"wdZwqrMXJtBF6Vr9IPJ19TTZf5xpsmTFndPUkMQxCx2i3HnSFN6FS2ePWp2A42U3mq/asfTl25MQOqoD",
	"Z00FzcLUqTjfGDbW16K2nVTrAsA0MIELD9bNVmrW7tEe9lqQmCm6XHdZk+eBdVZRv2nuaams3KK5u6ay",
	"cnGYRyS4941YzzMs34yUOlBa3UGTE97uYcbVaeCuR02VsG8brIZdqu/+kTqRHhqeNzmE9E+czA0gmExK",
	"Bx2xZCetQupt99DWUeEht4dcyjU/elnFhSbvX4ILbbfuzIWiibdevgHh21FLTjmV8erYA38h1wLBrEd2",
	"fdhmZXoqnaWyodE817faZ8rx3mNcXioj1VWw5T1cE3XDvUQdTJI/R5PkWW38nIWFHkkwMgH69Ua6CZXZ",
	"Ria0TlsLAN2NeuSKgC11qG0eJGwRv5MxusZIRCyLw+XYlbH1dNQI80q8facA6ThZY8jiArSkM/7TCDWL",
	"BOficYNIDWysX4IwlyLr2gsmyU5dcIE6Wtq4SfcfUKlBR0Y4ZtfoxQFKJrvh6ZrO1ERhWNmfl4/fH0JN",
	"rAz04qDzstuwV3+NHr3sdvZ+aNqlaqCLJ9urvR+6nf0XTbvlxnh5ep2CEZth1Lw31ag137hH+XNDGwq3",
	"fvE80grsD/Y3Rf6fG+G8nRx7EqhvK7KeFvJbSKen1YHNBdGTwH9bmfNNkc/DBeYxAlPMUQjzFcjbIIRH",
	"QOL5N0XdvGTlBDcszOSldHffmfsmOJ/QIM4Ema2S5zXhj11cm71LUG34+GbThi/ZPTS7rZ07+o+0c0f/",
	"eXbu6D/Tzh39R9m5o6du524nE/5qNuPoL20zjv7yNuPor2ozjv7KNuPor2szjv4SNuPoW9mMo4exGXss",
	"SaAjcAomhE/lGEOfn5lYn/gmjVmIi8dp6pDUhyvtupBlBXYLLzCtfRhNB3BtvdJVPOxlxYXnihp7TK5w",
	"7niQC4vFoXH+mGycO+nY+E1ldP4Vh8iHpsjDHuE9tGOA00x7w3Ppsv/bnArughBkQocSJjVH1I95plt/",
	"wUtjVzkK1/79IhsJ7N6CXnoObuooz2IvmSHQAzt4VYMS13lf5WGJ/S4YJ6eTI6F6asPFqwmh+m6GK8FU",
	"7rS2O1C2JHVfeLtkeWCTu/t3FYxl3BueKmNZt4Y6H4s4Rlr6NOewqqeF0qZPhccuQAh9ZS/ntbzDPn+5",
	"3XVu/uVd3kEfEiKR7QMasXDuFi7CW5YFtuTORXcTpKj5APyZM2XDUDk52Tw/nB0dqYJwbF5SzckjmY4o",
	"CCFGo7njtBMmhCre0gTOOMdUxnMEmYwwlYoDcJg7OKo6EpBB5Pq1IhLurGa+e4mzU9a1zYVz5yrqZjfO",
	"l3bh26jZt1iuocSDC7ENwz0oHaHjPZh3X3yOdaLUZOZi1wqbSk25B7wW57X1hE0rTbnjnGxL78Nt6JC2",
	"yqfKc0z738ek9Z3ctjVlHYm+m2KeEB3bRzyKvdHAM9FByd7yzwVkBAKxGXaWPOVthRMTPdotDFypmhmb",
	"6tAC5onnLC5Ut3G1bnuKI+VsTGJcXBzMn9bWHF7q+/KuYOEBGABFQaR3zHSFJR47q7n3whmBB2Vkt6HH",
	"4elKixuyN/Ipc5+svvtHmWjgY6ysPkInsTus/6Gs6VlJ5QDcp72EvGq/mcHQrr1zlfpdXnZBJH98Jt+R",
	"UblnBF+32i3zSL+qkUnzLnrjUJT1fCswDYchvglYMrRRRIZWTDyqyK61rvpYoYeONHp5kBPXwFccp0OU",
	"IQhDjoVYfFKyEgwF09BU1zO15UHunogOXt3j4hXOu0orw0ZDjhNCQ/sezjcdaTUuAhm0UI5WPsKrBtNs",
	"Yvfzjmy13FX1IFMRcmrahMoCS2Ve6mjga2MMHL/rm2dPcIjygnVrseN3/UH5+cH4022m6ZpMdcHBbcNb",
	"3Q8WBrSOsnYbe6WtX6X0/ZtJFSLf6RrK3YjfgIkTTtdfVDnrn6/k3rP++WNwr9tM49ug/fOnyL0VtGqv",
	"YlaI+gCXMX163olRN6DzKrYsnngb0oVH6e77OOx4aZiQEg1EK0/N1Y3U8ofpHmLUVrd513Es60ULr+xt",
	"oCQlCfHQhPZrcg/O5PRuwulYeqpJNJqjy5OjYxSAxBPGCV4cB/NuamruZ6281V1/z+tb3er6yx2k/+/m",
	"LvuQjgOKaRvpsY8EX5spUPD4vfoLrJrGd1sxbBY7uSKE8+caSc3uuff25sNJWfsO6N1Eav5CaAOVWL9u",
	"zyvcdBy2O9Uw4VzNWJhjtjx6K6FuhNbCR8sUKA/P7JHTmu1Ke/n3Ybcq80Y2GcJ266B+U8rGaq0d5IVO",
	"bTbaTV86fOsd/oo8AB0R3jngmncNy13/v/CrhrYT9/am4X2ePFYfHVwc5xAkDAXLeHCnRw2XrDGWCFeB",
	"eRmRWUdMNhiglLMZCTEvXt6zE92cIBcxP/Ooq/nEXzPBj0DCwHbxYSa528IDznB7SMl4rqDAo17Vda7J",
	"zOc4ZDd64JeF2fYOmQkNWELoBPVVOZRgIWBSYwZfcBZgIY7f9c9MljsQvunDJWt3ORXGx+/6KF9uOSTS",
	"HytU2U3yKEcbhCAvngrWhfVxPLU7RGY79Tu8M9Ev+3/gIebPjEubE9vFDp8+9Dgpz4vtKiQq5khYzJEA",
	"KGX6Jcux4hlzxpLbLNdOoO/fvUjfv+vm9HdVXC0fklSW3ifF+iffEK20qzE8ynS8jBiCqVotmNftKRYC",
	"BYwKyYHoWCImCoRamas2jz68RmOC41AgIv9boJQJQUaxfQ87yWJJ0hgvaHfHKSZHBaTkZJRJLHb0I7/m",
	"zEk4J0qq4zjMn3guIq4rNHTb+pgJ4liNlKWZyLORUUzk3ESzlpgnhGIUsWsFiICGMUZhZhhXlzGiqBg3",
	"QwuLNRHu4OQ9K3gk4ERiTqBAHELVPX8r2jahuWucyYxrA8cyVJoJXZOWB4wiKGLFP9v5bTHG1plq2ciF",
	"Qxo+rNeBEgKqueJpn4c9qS2bW+0FvaHs1XXmzmj6yYDN5ezuDHMyni8XKfWePUZyBRHEMaYTjHQtljgL",
	"I/tRN+GIuK1FpalpubRstuWrTIR6u3KDePJKLoT5y3XUxgLMzQF9/KzFY26MygjP9YG0Y4ty90WUfJaW",
	"iwTfbi3F7oIstYHtnXnZqXlUvq4BRvVdvER1wEZiVi3ReZO2ihjnTVvTYXdoPM99D1f06dVvtFPblpU4",
	"bRRjmCnpUnlhgmXmwQrVglMHaJVCO6VzfynB3Hf3PYdTVX6KcWpWFfkhtF+irT6y69yTTaumIAaSLN4j",
	"EMUTGPr8ckntRWY1obXoxDNM7RsYc6VZ/7//5//VqlU3k0fbNg8mEmG+5m0Ux8GOnVpobSh89eu8E64E",
	"5qXrsNh21mrPDlWXcaFo+IJz+w5G/5ZbKor2uRmBToxutiqNKLU41yHObySmVg2KLNX7soWfvNkU2Fn5",
	"uI6ixJFp5UH3Ztx2apXbJp4ldqtGj2KJfBMVc4MhltGue07gahqfTv9LZ3Y31rdjOrcG9DMeRYxNWxWM",
	"Uo4Zz0/864NbRxhd2Fwl1wRAFR8QaryKbKD7QL/Gni8UrdmqRUEaQ6CfHDH1JEAziOO5noTWADx+199B",
	"A/MazkhJENWGsqKK1t8wnpjaOBba6SkMiUITYkSo2arVzlKsrZQKxwEm+jmQNDNuo+0FHEd4zLiDmO2X",
	"RjfcqTato/PHQjuSkySNcYKpPlpmCHLEZhqxvD492UdYe5rqOhGmknAcz7ViiKRMxavdXQE0HLGbHTMq",
	"O4TtQpruQko6IQvEf0mY7B6RCZEQd3rA8W4KMhLF4O3qkWvXslHeg+1YyOt/wUPbHjEXPMcmHBLNctlS",
	"/n+L5YXJeMXj7bDXzuKmDqQqqcdDNEZE3BkNu++0/rVL/T5m3dGUomwZeTbjcetVK+ciJZUV1XecTDvS",
	"3kbZYXxSczSTchZmQW11kJJ1pUM821sop4A7IZ6tK/wFFst+AV0UxyzV16nWVrFfU8X+iio+Fcy7ELIc",
	"KExyLSja5gdQ4S79tVazZ0fF+/vtZTUxOiZWJlmvE3uR0twHYLStH91WwsE+ntJGWAZuG24VNS0dXpwI",
	"vdOhlbHZBbIKXknO0Rzll5GcSoupWhOaIhvFJCjEvCgE/GhuljpONWalcfvp9v8PAAD//6HwwAekRwEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
