// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
