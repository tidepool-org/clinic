// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"GpwtqOsAxpu7zX8DAAD//8WsrlXkOgAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

