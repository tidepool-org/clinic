// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
