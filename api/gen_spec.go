// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
