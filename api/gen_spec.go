// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+y97XIbt7Io+ioo7lW14xtSomQ5Tlx1a1+Zkm3FkqxFSs7OSnyZ5gzIgTkDjAEMZTpR",
	"1XmN83rnSU7hY2aA4ZAcUh9W1vYPy0QPPhqNRncDaDT+bAUsSRnFVIrWiz9bKXBIsMRcp4KYUBKchOo3",
	"oa0XrRRk1Gq3KCS49aL83G5x/CkjHIetF5JnuN0SQYQTMDVKibkq/P//Bp1xt/PThz/3D27+0Wq35DxV",
	"1QjJCZ20bm7atkYCdE2bJkfDZr/7rdv5CTrjD3/udW/+KhI/3nSK3wcNfu/t3zxZgjXHIHF4SRJ8TDXi",
	"IRYBJ6kkTGHQxzLjFHEcMB4KZLOjER4zjpGMMJqQGaYoBInRd/hzEGeCzPCTVttQ4FOG+dwhgd+c2+sx",
	"4wnI1ouWqqojSYLXITyQwGVjlGEsMV/AmNDmGJv2tsAZR/yYwijG9QTmBM8wMtwh0DWREcImOzp+00eE",
	"SjzhoPPX4+jU72JnERkxFmOgBpMESFywZ7Ua/bG2f/mnxb4ROiMSL+X54vMqhk8IPcV0IqPWi726NmKS",
	"ELkMa/PRrS7EY8hi2Xqx122rukmSJW7NmqCY66rZeCzw0rrt1wqupr5ubX0pSIKpXEqP8vtjkQAWo0uY",
	"rEPaZLkzgclZjJcRXn+r4WWnuMDAg2hxQr3K4hhJ/FkikwPlVde1YytZ01IEHPdYuBTbMsOailidvBow",
	"LhHjIeYIaIhASk5GmRanO5Md9L1qBDGOOurHMjGlq64fiu/+60Xnr99///7Jd//14jfofDns/OvDX8Mn",
	"39cOSiYwX8oH9uMqDvgHx+PWi9Z/7Ja6edd8FbuXJMQpY/GVqeZGk8R8U0UPhWABAYl7uZ68ZCqr7g1n",
	"KeaSYJ2zRLKGqwrUfsvzfWi3JJGK2co2UNFISQY2+ogD2bppt8zHxaGy8HYFHwhDjoWoGVrJMZbIft9p",
	"tauizqJl8x3aehYGpt0KgJ4RpQU0E3IM4Tsaz3P6VyV9uxUQOa/Bn8g5UoOpUMGfIUl18xcQM3QYS7YU",
	"QVWwFi1NkAH5otHCVAnG31rdzv7BT612a/9Zt3Pwk/r1rNvt/KR/7XW73e/1kNTXdanBZV0pZzMSYj5M",
	"OQSSBGqORRhiGQXA8VDMhcRJq92aKcuPUODzYZCPEpMR5ppdzTzHXDW8Utu0WwHLqOR1xDMfauh3NThc",
	"TjlbXV1LpWmx1JhYMtJlJSRcN+3UVGu3YhDyCMdY4vCiEOfrijo5b3IpUCXLuRZPY21ZGcpbPj+ROBE+",
	"LfRnpErU0aNUM3oqEVN+EwxtlcA5zHWNEaP4PEtGdlHgY35Ikc6psNc5ETVZVQeatV7Wr5qr7bTOgzxM",
	"Koi2WxklnzJsy6qBVrgzISHO1Y6P+YX+hgIW4h10QjXtr3YGO20k5ykJII7nGvaFpDoTElkQIRDoj58O",
	"nnb3/lDqxPzs7D3vHvzhs7P+sJShbdtW3S0OIsdjzDkOX06uKDErs3wuJ5Pd8FRVnLB497RWCHi61u/0",
	"65iNdM8MtZDOaro3ZhxBzn3oMvI+EoGeoglnWSrUSB+gLE0xD0BgBHEaAc0SzEmAggiUiMFcIEIRhiAy",
	"pXbQYTIik4xlws1TkPTkD623/9j7o63p+s6mu38ghYNeE4U4VDR27aPDl72j41ev3/z89vTs/OKf/cHl",
	"1ftf/vvXf+0/PXj2w/MffzL2293l+kedNPEn5kATbdnICmm1T1XHKXXKONKSmgbLOVKwBMuI0AmKyRSj",
	"P3qHhhF7EJMx45RAhRF7hys0pkKmDsssTZUSxeE5k2RMAr1wWjuTB0uKKaFCjA1S4qUg3b1udwG7tdJa",
	"lTxyyedW+4pjvE2VCf7CqKc0D8ecBLB7OCLhR23h5IAg4OAkw5CI4eEIRi4wnhAjpHKASMArJRLspl9C",
	"AlPmpukkI176YxY7aSIEZE46BirnHDsQDl++wIzEsQvMPmbJKHNb7gHhzE0KGMVAAzcLzqSbZBSmWhtb",
	"wBFMgbtJPsRiOIAYIHHAH8mIZdLp1BHLIHYqPo6Hh0Ayh9ZqNCW7diCvYcS4GqkC8gY4uB3/mUVAKRaj",
	"jE8caOaOz1tIUq/ptxFwyTIH3bdkAjFx01REIJwypzBhzhCfkhHHFXqfssRNZUBDt4JslCUjEBFxYQKm",
	"Tp4ziGHE3HSaSS8tMHcY4UwxokueMzaBkIjIzcOoEjNOK+eKCUYOGufhR0gwdbMQSLAz6Ocsg2kQMSlL",
	"2LsMJhCybMKc1i4Yl6xzzmYO1gNgw0uPNpckGWVT6ZS75CRl7ghcZpQ49P6F0DBieKogWvmouQhekgYR",
	"4zDBHmySkdgMfQGSZJJ5EA6TDAj1YRNMJaFqEmHKxPCQcCxqM/RAQgI8qC/eYwkL+2QGIdgxqMnCQzaq",
	"//Zz9jGb1345hWGfsI/1xc4wDdmX+m99woavIY6x5eeFDAOIJSz5Qoc/Z0Y81n48zUh9nZdZkCVLCl6J",
	"KIMKbTKfHiKjgdnMK0CSTNnUr1FO3UIvISIL6eFLoCHmILwPfAShR4yXONZLJCetFmwOQAnNzgBGsYfV",
	"SwbD90R45HvJJqwCIMKrq57DepCMOAknePgS5j48ZcPXXHXEA9Mgox6AQwB+jYuc2oM5ptSvaO6PVC8i",
	"AUyYD4kyiLxZ1CNZCKFiD46/uHDGIR6+AT5iGffhFa7vKTN52Cc+fhwL6dG4lxHwy2Wqoy5+R0AT4FMR",
	"wYx64GvBFgHDHseeYDnCdIa5B5Cc6S3TAsISZf+5aByHCaM+qseEZxSnLnWPY6UqZxAyt4FjKjCF0K3u",
	"FeNyeI5jH2MN/QXm3ogpIMTYm++vYwiqnPOahTKCkQdhYiGX4qzhZcanHrCK3+sMQhyzzOvd6wwkTiCu",
	"ZJzDp0xvhpewOXjy9o0yaOGzB5lVsmCeMEHi2B3pExoSoMX/SoWIms9vKftcAz4Djumkrr4LfSqWGxWV",
	"j5c4jod2f6f67T2eQS1c2fnKUKn59guhkECw+GWxO9mMuMNy8gnizGPMnyEBny+rKuTnjGJjTFrAW0xl",
	"Fkznu6csI6KwaapfzxiVJMA+/RVhhyfnLoRDjGlIPrp4nsLwAlypcEoSF8dTJf/oBMcefWrxOWXXmA8v",
	"uKKnm/kMAkyYB6DgK3oFyfwynEyY9CGS6MWyB5SQMM78ol9Axp6cXFS6Z5gqOYG9yjAnoZ9JxjBVlXnA",
	"zyRgVSY7U4j5GueM0UBWIRJzjudV2IyEmFWAHENcAQnMObg0OYd89ZED8PXwV+bJh3OSkomHxrk1+Iok",
	"ZzQCHyKj4RFMmVQKNoshWva1h1WXln1V6AzAV9jnWeai9+4joTBxW78ANed8wIQSLjM68aBcqUwycgl3",
	"ETFMiStQlNXbgaxj2LLyYcjGw0EKhFbgbHgYcLwAfI/jyGstwwrcJ4EPpRKGh0osu2zZB0Lnwz7x9Vcf",
	"6JTQ4QmNsTuwfRyQMfYAE98M7mPB4kx6eQgbvuRAPWz6TAD3Zt8AFH4nAkY4roK5N1QKRHz7QoHYUOvY",
	"CpwNLyDzJNAgYByL0Vxk+nS8AEck5SxwmWBAfANxIIcvgctI2XpzH/4zi6jwQW+JlBXQaRaQSoWXEUug",
	"ks2Ifpfwg2sylsNexrkPv8STLFAr0dSt9jLKPAl4GWXKhq2o7UvyMfMV5qWacpL5EMk8OfNeDWTmc8t7",
	"wices/4SEYkjxj2r9RdCKUmxO1l+hWkmPdHxq1IX11Nq2UyNfSDtxoMRUCXoCGZG2TmgTJlUR1e8UALl",
	"tzMIPmXAyQI4t/EcWHCW8ZD5wAuIE9PtEtbXxx/gAwcsk9HwglURGMzZdSXrJWdx7IPeMyGZ5kIN2D1l",
	"dDLHwEdzrLEURC1knd9xAkbm61RiTXGdoBDOeZH6JI1Qtgk2wkVKRBMYmYGw6WkEIwgLgJzzsvBLmERh",
	"+fElRNwKK5OcOjnpZGp6Y5Kcgtmn0klMeFY0+pKIaIrLvMoSJnmqB3GQSbMq0umIuAlGRhCLsue9iNHJ",
	"J2IkswFkdDJ1ASxmiRHSKnkEQQBlIgERGMWv05Hdc9EJEhdYHWUjcBIiAloS9RUkMMlEieZr+FL8Vsub",
	"kmRv8IizMsWGvYgMzwiNShCdDN+yEv03bFbQ/4RPMykKwp0ICXRUUvlnmAIvsfgZ5pDaLT6dxjwTuTJU",
	"gLfgFH4LSRCBLLv/Vi0SI1ImFevwMimjBGiYOQA/HQEN55OyOhZPoUTuLQdB2Rx42Z23GcQwPM2SNCub",
	"yYLIGcu32TWQgo/O8rVdnsjKxATCkknOYKoMFV6mKYkLVM4yEZQz4pwETJDi4zmbsWn2hWKH7gomyIg4",
	"uL9LnN8cCqpeRJQlwwtcDvCFspWBQpH9Yq7mPZSd/CfIEtV/qpUvhWLa/3P+ZR4zHhYI9oFOWMlSfTKH",
	"sGhsALnpZVLTCGLipNVSGGjBXwPMSoYYREAnUcn1A0InkDJesP2A45DiKYvnTucvgaTlZL4ENdNpQdzL",
	"EYmJKD/jiJejdInj4eGMzIp0RJJR5qbSqEyy6ZyVCQeDq48ZnQwvgIYOTa9iADoCl7JXMdDhS5CshPAs",
	"+VQgdyVk5xyX0+c9wXrkiv6/jyEks0KIK5BWc8JJUof8v+Ip6GP1fO1ogBzPDA3UmkHpgcMvzG735JCX",
	"mCeZGfIc1AMKZuu9hKR4+B5zs/WTQ18B5qwCqQB+Bjo8A6t0cuAZhJhwr8k+nk8/gl1l5kCjAl9jxifE",
	"yz2Qwzc4tjvHJRBobLR7JiSHWGmc3qWfDnEMxPSiAL7kROTb2Q6QTTEdviFGsxbwnhLO3CBfAjNuLYIC",
	"dAT82syGAnScBbFf7g0bGUfFEnT65sRPExpiq41LIOPh8A279ps8w/GIZbzSkfPBL35arWE8yAWuQv6Z",
	"YUxFbGdvAdbj4UPmIa2Q/BJEApT4HX1PAsl4BfgLFn7ff1VW4TWhelxfcvhC4l27VrGpI1wu6CzoGHQt",
	"NmXr7B2rce8NLn/oHelfQCFUBojhlRKilnhGpFqAqg5zWgLOmFryEAdyjq/HLKOhpY+FXkBAxm7VAxBT",
	"kEGEr8Ep/Gs21bO2F5EY7/aUwKaYSoOChhkMTnLy98ye9LHu0fHA/n12rPt1PJmnqr/HRFPpWAa7r88u",
	"y1/fd53fe+5v74P3Zd9JuL+fOr8PnN/PnN8/OL+fO79/dH7/VP7uOFh09tzf3gfvy76beOomHKQ6bi43",
	"k5vHQbzjIN5xEO84iHccxAv0OMb0mmjHRJW+6uXEv7rs5b+oWhYLPcIq/a8sVprmOOMsxbuHiRrtUJ9h",
	"5iAaMiNhcoCaINNIs1EOkhHWS0WbfonjsZkIJWDCQUu6AsKNfs7THCQRMczAhWVC4NitOAsi4NirOgsh",
	"rUAEoRPsVN6LiCAUnI72WIppBF6uo2zkofSajDjERo/moAxzahZtFvIGx4LQKSkhJyLGQzYenrkUcgxY",
	"C/kZc6+it8peIVSRyQESPHNTnLnJOXFSp0SMmNPi6cdsFH80i+EcxGjoZck+40QJ6UkJO4OQk9BNm3Ow",
	"IskJjiBxajkjVNsBeZJR0NsiRVoE7LpMl1anBbwTsZP9AjhxBvyChRPGzV5uDuIwyRxO6pOJ87Vvdtxs",
	"Stt94KaVAcAJZS6Mw0c8q0CkS+kBScaYs5Q54zeYsvSj2xQbu70aSBZMIxY7M+kS4phQh3KXhBtF76SF",
	"18hVPAfKZi59r75EE8aZM0TvIcy+uEm15naaUeacywbvSUxJ5hD5PYsnzGe8X4ALcEbtXzDheOSmU8bZ",
	"l2juoP+vjBvZ8/ql/tOxesDogFz+54LWyi1XZr3R+kStC6dmWXgSYKt3zFnA7iFVSwQKnOjxstBeZN0S",
	"ijQnQpotqBzEAi8HSxh3aniL+SRTNlwJOoMIu6k4JDMsXEjGiTR0LEBzJqVTqo8zak5sT4z1fyI46K3A",
	"8oTiZ0j1p7fX8BFirAXQKRnN1bczrWbPBvbv8zOtZs22+O5L+AjKfMI+aKCXlBbwGlNsDIrzf+k/nd6b",
	"Q1XHOczgoyLARV9phovB5Y8XunJrOOweppqbi2QWTO1Q5KCXLJsAofmuVA7uRSAjrUBKiNmHztPGpHAB",
	"Y+OUVaRpiPko00Z/DnsFU2Bj5kLIR+ImMwpj42uTg15DDKlljRKWjIjX+usMQogDoJpODtTtwxtGWWxU",
	"ZQ7S26Pm1CEHvQVaARDFIwl4aL1ligtcgDP0OewMPmaceQD+KcMC3M6ckfAaXCqdQ8ZdHM9J5jZ0zviY",
	"xVMPkiXYHegLmLDhhdmJLmExuLVeEBkA4S66FyyiZjVcQiik2ANwOTwz+9QOuA+cSUYnLhIDIGZSlICE",
	"uRkuISIeTS+Bw7WXQ1UpIXXxvuQeH/4CU+wlY3PQmAN+hVSlWM73jMtsopmk/66n/75ttVvuZsFlxqda",
	"pxvL62qwexgruzv/jTNpbg6oFCdfGLWfSsP/aqDnR8cefpYQswy4Guy+gWsgxPy2uToDCVx35mqwe0aC",
	"iEzyZpwFw9XAWRZcDQqiGuPQNQx/6Qyu1H9a/GgL8cOC0+dl7j9Y9S1stz53hGRpTCaRuSEVtl60nkcy",
	"u+Ywy9iPwtwpy9Lw9m7s13gkiPQryDipvzjkXPHQJg41DuXuNRznvoTvaO/ju+iRaf09axyZF0i3/OaI",
	"Yo4FR9nLCKM/SPgHSmCORhjhJJVzRFzPeQIUmRtzKAKBKJNohDFFEAQ4ldaH2Lt6cid3CIpbgWvu+ymO",
	"mLDOFncQqld//HuDi3QiYX6lwJKDjBGRiij0Pys0qXMCrr+poCqmC7cVzERecymEsxiv9SEuxr6vc9/N",
	"1Kjwez4wBqFVrL3ArivvOhGg5kcfx8b1OSLp4s2roLgYtZ4QLfdSdGPaLfTYHSXbfF3XarDfrLPN75ys",
	"avOmEWoLV0Bc1Po5rxXI5G7dvdOT85Pe8PDoTDup2OTZ8dnL4742AY8Hvf6JStRdrVhxJUfJnQvMEyKE",
	"9npvdEGlKLoF5eou65iPm1ZWW5OeFPZq0CITg5RYSD0Yg2yUEClxWHdfut0iwiqRJd9jPIFg3vNv/m8m",
	"B1OH7M3uOrkDdePym+41yrtdw/1HIGHAMh7gRaKExbc6mTzQXIQ4TjkWmBriKTkKiGOhiyGtihP4nMvR",
	"/QNPrKrkivvBy66mKJyRQQy90z1BJ7UyH39Oibkln4vbVbQ8Aol1PjUxWEjGpBTTTcvlVxPPrbYpb3KE",
	"+HPAEp8ce93u0itVtqKlN+OKqzfFrUhMQ6OR7a8+DhilapzbLftLq8aQCDeJOWf6EmSJq/vZI7odVvtd",
	"jbeov3RTEdh5Lo88jsi2DIrCspHVzNpcJDgMXiMWirFbYO/f+q966OnTpz99+C6SMhUvdnevr693CJbj",
	"HcYnu3wcqH8qx478LJ+gXfTbyeAd+vGH7l6liGC6BBGso752tKoHGmp13zEWwE4kk/gJUhAhIUnR8JrI",
	"aIjyqzyIUJPRGKTlWO139553uvud7g+X3f0XT5+/OPjhX632kjAU5Vji3cu60BTLzLnjN/0jLCShGoGT",
	"UCxKi3HMrkWEcc11dqcoOjlCbIY5J/aO3qu8mFhvclEmsdis+nNdZL0xh0UWyw3r7ttC7bXRKty5UNKp",
	"bDbvmjMljkzECtTHIfuMQh8NoCFKMe8kLMRxgZRYmDP167UvPwQf+Zf9Ln6WzDKN3/Gb/isISGxviPsD",
	"W285v+Mh1gogL6glFVorCmhl6hftNsO9G88/jX+U41DSrJvjfgYyiM6wEDDBfSUK6jTZmaKVKzB1D2rN",
	"opAFWVKE7FhUKzNMZfVS+jm+rqmr0vkSD7cWr0GHNDU9a0Yk2NvfeyafzUj6VHKPSH38KcOixgBKPOqt",
	"Eqg1WLkmx/GbPtLfUd5WHc5Wfqmmb+r7QD91kzh5Fn4Kx9fdSh9EyqjAt1+K2NvlTa0svX4TWEpCJ6IB",
	"mQZ51vr1S8uprGbUi242G/MUT6cfuz/xGOi8oNcFZwEOM7MFUiOzzVLxMNABDtaG3Wn7+Q9paEIM9XHK",
	"uKFik+0iOnrK9uH5dIpHYLgzJELVM8iSBPjcqW4NOiYk0mKxys34nAj6GrOW3LYIGiirVUgSCC1SL45e",
	"IVsNEtnI3QFaJ+Fd9vcbFOgM0oaDOJk/D9mejOLk6eRZPogDh+MqYm1BJa/hyIoOL0hYY96boUWMIzs6",
	"en9kMfjU4gpo7GiSNfgUwl+Z3JyehLlUbcJHn58fMH6dHjydZz/tmbhFC+y+pv3K/NDxeMr1zpptlzK8",
	"Vl5mAQO3V/4UR8WoNuOMpEuuD9JuMt4/oCPDGdpuX5zSNlBCYSEedA8Ww1K1c4HvL1KsyMZhsYQT6Nru",
	"OmpPlLXqPTB7rXntbqc1vjVWfd3i0m5EkxBTqRZi3I8CsD/G+wc//ri/9xzjg6d4b7SPf3wa7I/vY7Vp",
	"UTk5qluFnfXPl0/Pki6LEd70F3TWP0fXEaYmIp2yphhHesdO/S7UU90sM9svdfN2zNQaTVVt8lAshFqy",
	"CcmBuLsAbhQ4dwyL30UrzjCqejfk3R+f/xA8/TT9PH9Kop90a2dYRz2JSNrHiphBHvmgEo0FZQJz9JFp",
	"74kinAdKMiFRoo0MiON87zbEY0IN6+ZVioXNcb1ZesQSIEu2453SCNI0JlggRuNiV15jFIFSGEhXlody",
	"MlH6wOCl0A1NK85aLGJC0iXr+ZzoJ2G6iNiJapsIJxAYEUhg2UYgNVZqgafokJOq3MsukdZUG2EEmYzU",
	"tApMDMQJECqkqd/MNzlH+UK91Wjz2dLT5ZJigJE7wjWzv5YVxHa8IFGMQUik1suWKUSKA72Tg5ISpZUc",
	"witoNNplqGfohQ2Hm3UUEvUkklAn6K3NVhNysGxEO/gs1khyBb5qJ/R2J0h3cgylMMnWUz/vzsBkv6sT",
	"yDKo3KKc0NxYnkmZbV/nzA6MkYxkBBJRjEOBJFPTL7Hbxzsb7hsUkfYane+UI7xq+AcFeRc7GJjbW8gM",
	"Qd7PxKk3X/peHJ8fnZy/brVb/avzc/Or9+7s4vT48vioFilkG67TqHmeK92xRQbdkiVqdiQzUYucbXgV",
	"3TYQDAW9bmqaqjv0uYMzihHhMjrK94fdrcL9TvfHztNudYPw3kLRhbfesaVZHCtDu9JEQa7bHlSPszg+",
	"X3o2rL56B8RpcZSyZm26zQF4DEIWJviRPjDoma32242CqvcqjRmEfZwQGmJ+u/oSvsR4SnBIAohtoGUb",
	"O29j0t3y/KvdEmZ537Cw3QzQExQmG4QXtEtoCXyC5RGekSqXLwbmqjDv3TsD6BO3gqddUdBQcaw4K7Sf",
	"Xr4+u8CcsLozQbuvok8BrekVoJevz4yBmupi6DurWuL5C7QXttHzsI32DsI2etoNnyxGUp1hDhN8BCSe",
	"900A7xrr0GRCocqFFMns+qSQfk93nhVdMnxZEQnjmIH84UB1tKbJIxxLqDkeIOMx5pgGGI2wvMbYhLmr",
	"qQARamxsSwSgIZphrnjWfMKIpSkTRCpZY2NMF9jvb4796zgLmMBnCYuX08tmUgPGa/F0kXh2KyS2omCO",
	"Xw3xNMVkpOWLIldOzW3JFoE4rGe1RQVb5q1QuTarmmIn9A2ZRBeYB9iz2pflXNe8yXnKrptVecqum9V4",
	"qYVZs0pN3mb1vsd83pwCee7mdTemhM28tmYmIV6ZSdaNamXn2XxQE03pQCUCRapsakJRRCYRmlj25kB1",
	"WLeCcbs7T5tz7gImm021heK3E1Xdnf0tMF8q2XWwZGNEOBJqNfX2uqsxIFTWtr4t3e5ExD/bAGef25sz",
	"Xcyu75TnSjy2IV1Z+qE5zhcATRhuJeU24rey7S1p9uDctqATmjOcsY3vlOc8bLYhoVfBQ3Pegs5swnzr",
	"qLgR/3kYbE+/B+fCGguiOR/OMJ/fvcqtoLQNMStVPDQ71hhaTRiyATk34skKGrch5Ffhy231sabjXStl",
	"H6Ftafn1lPOihd6YJe9OS/tI3IKID8mPlTXLOrJtQxyniQ2J4pS8HTEaoersto8miWlnZ7bXZFsrf7+H",
	"qA5BfOHtRjXYGSz3x27aC4eYCaRIMvOUhMjSlHGJQ71DZjcty32XBfzF2g4MJMjas1PhbsxlAnOhmEBN",
	"btV0PmVmEGd48UQ0YHRMJpvtpvZMGXME0Jh0tvCRLlI8xeYMyybkF3YveeuymmXfsKzuoRi9P4Ai9bG8",
	"AoHDnH3Vh3iuz86cM56m7KqLrR7s3qabsL1vm7DfNmEf/SaslUQ6tDHWHtE0JIEOb1Yj1ULMyQyHRm6h",
	"64gEEcJJFivxgQ73ei4Wz+8Ei83ot7yebWn5/FFsaL9eOUpLN197r8+uBD4jNLMaYU3OJhu6JmezfWK1",
	"PGjS+r3t1Tdr/L429Zu1ft8HAM2weIDjguaIfJ2zhYXZstScT0weu6y8xsCth9wk8eRwt/kCyGt889WP",
	"V/yhluILQqPhOnwpwTZee3sYbEu1r7LqXhCjt2W2vU15beuVtlf84bZ9KrKsIb3WHl1tMkk9JLY9u7qT",
	"Sbq/KdLfjky/HZk++JHpVtN15ZbiZrO1RGHLk78HVqjfzpm/nTM//DnzVrN03QnpZhPVQ2T7I9KHV63f",
	"Tuq/ndQ/npP6rWZyg6PlzSZzBZvbnC0/uP795vPwzefhEfs8bD/B79Cq9nG5xUn9V5nd3zxHvnmOfPMc",
	"eaSeI0Ezz5HeXXmO9Db3HOmt8hwJGnqO9LbyHOn9u3mO9G7hOdJ7BJ4jQTPPkXuI6ZuWd5Yb0Grh0mJ5",
	"M3Qxmu9yrDfpYvPbx8vbu2mA1IoL3Rf+rdYKwTMhWWiDIi90izKJaz9k+lJv7acZwdc1HxY7UR/ld4Gm",
	"g/JO7UoRkQetyaVEaJ5L9Ls7miSFwGnmlmWy37QVk29StBBtbs9zHA3eq6eLL5WWOluZZgtdpPRSAHGQ",
	"GdZARhBmRegEnxxqVWF9Ki4jjkXE4tqoE/aTEsOhjmMWYqkGT0dEIYr6xhOGCL1QaTU2n2J2fcftx/pd",
	"oIbNG+K9t+4uDWncamR2zOwS6Y67VywGm3dyZqy6+0BkA2K76kLzZCPuP4LaZZ5W0EhyCKYW0VwUOLy/",
	"wO1jwoU8gloLEGQRaUFnQ4QGcRbmPl5LA9tWL9pHIF65zdT6YZxCgwwmbkIeTKM227tM6qv0A/02en1U",
	"cGjSZZWrIN3GfTZRHjQmOboNmzKjtHErfQyibr6eEiHNYkF9FyYOk2WMaxDIRh5QDNNqbxAtIV4Yjso6",
	"xcQ3UCrnjkjK7Mhu29MEuJoZeTUb95hVOWvddNFRiYxVgGCsFm0557URxwmb4dAGnCtIsjExNDKnJCE1",
	"WxZXaaraVB9zxLzZYQWXZCjlOgAuInRMqFqufcpwhlFY6sgmWDniTAuj1dLsEiaLphd5VLHtV8azX/6G",
	"iYQJColIY5gjG2HORW0hzLyL2e+/p3+e3qi/5zfD73/Put2nWP8NOh/+3Lvxvv/+u6hm+X/+scGLPDUx",
	"39WgrBwyG9q0mDWVTbKymkq4yDsfG7ep+nCQC8GKaksiJTaaPahx4UQo3mT5UidM8rqWx08OrYZqGgs5",
	"wevz6xB0NcsOsTS+sUI1YhSfG0PGDWH1Z27dvGh9v4e+e/bs2RP07Nmzzt6+fq3V1qODEd5UzQ5aVLcm",
	"/JC0MWg3Cc5mK3fZW3UBnefG2EIXB1mqhIvA4TlTPBuUgcXqd5DGEAtc7VTqLkRP6IzIIqxfTZDPHLey",
	"beQ3XoPnJQlxXQDTlHEt4kF2OBHTct03AlUvo+XVkwlnWarkacCJxOZx5m32iRQq5e6QE7J/XaE8UL9L",
	"A0lCvERbOO0s2RlZ/6qLCeg1JrHEvBGOr2xWZVJ+9eWgZ2i94ixZGp1qRawx/bYG26Dk112EpsV1qjJi",
	"3nMd07nUFN/thX89D//aOwj/etoNn/yj9mGW1YvZy5Oj461WslvFJvu2/F26/FUCYOUS2J2Vi6qSs/SE",
	"LrkyUTKQMZW6O88qfGTg/+9f5n/zX2CTwZPffw9//31H/w3/q5bJav3dH6bZqlfgQ7X6lahcd0x73y1X",
	"uNRqkRVsujRm6L9TdMwtBGCFkBa9FYQ0lsLyEKyP4Vbn47gj2fDIx+XOx3Ox6WteEnpMFyAei3/3N7/V",
	"u3dve2Q+g4/C0amiD8wSsqlWWOnd0WhzZlHDNAhw7W4z1JKzZjK3V9in9XOuTjq2WwnGktCJyepFSy/J",
	"t8oucRT4JnuseVGkyqKTox30Lg6RkPMYo5MjgYBjtNfthGRCJDJGhXnhhAjziMrYPNkR4c8Q4s8kCSBG",
	"OrfYQef4ulLV0x9sVb9dXZ0codlB+X4jpjvXZEpSHBLQjziq1G7xnno8H5pdu2G59fgfduk3PBh+x4GG",
	"LHnypGId/tbt/ASd8Yc/97o3fxWJH286xe+DBr/39m+erNqurFKxsdHnj1ydV5DiTUXlahPCPd3YzLpL",
	"4HP+FHHXPotaPk28co7U75xeErt3aB8pkATz7l63a19z7+6XP5+WPw+6Xf8pVK+Y9yDQAPMZCTC6JHXP",
	"pLRbl5xMJpg3e2pjZUB/R2otVFoz8czp3Ir9xcp7CsszrhrBZfUvPLSwJJ8jS1YjvLSH+Qj73ZEWupr7",
	"7Dspvmz1N3CdRpaioNj3CEsgsdhk7dX0MbnFRto1/jwCBxkncj5QvbNjirU/zyWb4tpnlYp5azMiqXO2",
	"W0R9jzCYp3/MeVPrc0fa/B2bv5PnzydiSt7ieevmRr/iP2Z2T1dCIB1KtKzb4v+XV6ckatlMjpSa0Fxl",
	"dx/R9YoseEf+gkdI2PmoH1wRknHtyl08motgxDJpH2gR7fKlFpEHXyHcfXErJgG2hyQWv5eDo85+pxdD",
	"pg8tfBwnREbZaCdgyW5BLKUvTDO7o5iNdhMQEvPd05Pe8fngePFdeIEOL05aeqvM7B229na6Wko79Ned",
	"bN6wPrhNMYWUtF60nu50dY0pyEgzyu5sbzfwHm2f1D3g28cy41Sg2J53QxyXBLQVIO76weWmrZgLiZMd",
	"dKLWdBRihGmYMkJlubvH9VmCfvAs4ykTWOy0NNLcPlRoD9oP49h5X151gkOCzfbcb/UTvsyya03rm/ba",
	"nPr0uklG5z2FgQS+aZljGrZuPuiDDH0Qpsmv1JKdPNZU1o+QGWG4+9F6IRhBtvkb+0u8Gv03qhZm17u3",
	"Rs7kHoDG7eEwjpE3HmZ/5rfi0f52Kx/01gdV3ue13T/Ng0Y3Frae+aCG/UTxEBgBiohKmne+EBvXMpFF",
	"7hXjBe73z0q3HeQtx1Y0H8xcAKn56BKmOqYfbjYlln226ubDCg4gdEZkfqB5T5Xv/ml+nIQ327ezfsTz",
	"RlbjZN8Aq0FEK2Alnku9WDz8VVorxgouGaRqQnxot1ImauZSIYb1+qiQxZIh85wpovg6f1kPf04xJ3qL",
	"Q7EFLH3jbAflZ/romtH/lO4rZyijksTue4ShMWX0yitlqfXLUjq4eFtMTWT8Wc0IIuM5mpJgisMOG4/R",
	"aI5GMUkXFYR5rvYcXxtOPS5wb9373Gs0y+xzuqVsbC4tV0pGTvDMPM2bC8egqHCp9NtY4jVWic1Fo4jA",
	"vJL7UJp2fQkc8WP7qO8DiOyl0rndOrjDxsyzuzVNvYSweKJdt/n0/tt8xfiIhCHW7jnPHqKXhcBTy3XM",
	"UZ5xmQas03nKAudMv1b/mz6/v3j37nR4eHR2ct5qt3qnJ+cnvWrS/HdyeG5UZq0wNv6qCByhuzBrTZ5e",
	"/pGbAXvJwvk9SLGbh5CVba+Sz0ns11Fd366eIk1Yej0Lbs4yduiKcVnJM1V5bmTfMGAh3v2zkIM368V8",
	"8eitoU7+4rCuAtmXt332eY2tzH85HxQC93FoxNc4n3RKq2vskEWvgdVZYycJr4PLTKXVey8fKiP1Z+7v",
	"dWOGJca1jvUaXq5F7FvRHGsjhzIUmFcccZjvMOSmk0DfjbAgIRYoxAkrwE8WLRzTiCMJvCE8WMTqnKGe",
	"HVOf8qamFcx7027KiKO58YNewnVfjdXarZjQaW45dfwtDh/Z8rvI84VuAZ/1cg9A/bD5P6w43vmUYT7f",
	"Kb4YUfqVRVQ5v+5Jp21kQRZ+k3ptktVeHdD3NoAi/Nme4yzRiSbnw+jETbXVzVcTrl+L4ezus2YCf9/5",
	"tw9qsEuOtCN8J0y5oFNLSd1wQ3PZyil/KH4HrVhCbbUFKTDwILrbZVTjlZnZg2+QUQ3AA21ZbbxBtWSn",
	"8bbiaPVWibtLEiya7GajbLnVbr7fn5Ai+ohwmeBZQ1vPjl225ddkpuVQAnSNsdTX19D8jdsxZ0kBWGn5",
	"5NTcuKee0bN8c3Od3VPsLufSYkJmxveHcHP7bpU9tBz7u2eIDQzwu9rrLWdVu2FezS5rbYKKQVA341yb",
	"4FHPOE8Jbj7jcMR3xZwGm+9hNxB5hxSRBalnXEavSRyjNBORvVUrsZDFYia/8qqdGYTUxzI0RBdHr+zh",
	"njlYAFVFsVMcMRTBTBt8EEgyw0hkowKbHXQZYfUhg1jHkEBE6PZxiEARIOKMskzE8x10iEQWBFiIcRaj",
	"fEhQgkHfyAWpm3DKIAliiiIQaIQx1Zcxwiy2p5E6vk7eMevWbKe6WW7Xo/s7/Z3+omjE9WkVOugeoHMm",
	"0SuW0dCuB4sdcIYFokxW+3/8pp+vFFWVCzw+mNPg+E3/yETUqPDefs1wBgFOJQ4rHKiq0W3ZilbtRCuL",
	"LGcJ61qznDfzkxbf/tqaSzdp6FanO5uIrWXnO83xK6GrtGSt9WEyK44xtYWOCrVLkHrdeWKy340KtZVt",
	"p0pr+8Vz/brQrZ06XdqwN19JpTYlz4PwqHb1CKKG4wBCsIAYA7fkLPVBmzaLg3GYFyg6e8muhPYdug/1",
	"u7S5B1l4N2WCAsuSBRQNLV02Ufa5HEmdW+D3KE7zZh6XMLXL8YikQ46F5CQo/BMbuoso1VvWgtxajH2g",
	"jZsRRngGcaaPo3WMDMP16CMjtFyuaE3/jsb5OTiCMFHfA3MejoUw3v75vKr3ZTor0Om7fbpHHl7SYuMF",
	"eFkeVVC+69V41tQylcyGkqns3FQHecliYcUY3L3oWk7+m8c56Had0nzYtzYbN3KGKVjlTtxhrDu1lhCE",
	"EkkgLr1QFtjG5j4xGV0f7PvgmAVX7/vmFbehteyRU66Oahu4tizywUrZrkVnma1Wsrqf759YzSZTsYFU",
	"lEMDCTJb6wjUfvApYTDE7nVeYW7leO5fpe/XwijYGk519sIEuihdq+9Fvq6eJvsPM02WrLhzmhqSOGah",
	"Q5RbT5rCu3Dp7FGrE3C87EbzVTuWvnx7FEJHdeCsqaBZmDoV5xvDxvpa1LaTal0AmAYmcOHButlKzdo9",
	"2sNeCxIzRZfrLmvy3LPOKuo3zT0ulZVbNLfXVFYuDvOIBHe+Eet5huWbkVIHSqs7aHLC293PuDoN3Pao",
	"qRL2bYPVsEv13T9TJ9JDw/Mmh5D+iZO5AQSTSemgI5bspFVIve0e2joq3Of2kEu55kcvq7jQ5P1bcKHt",
	"1q25UDTx1ss3IHw7askppzJeHXvgb+RaIJj1yK4P26xMT6WzVDY0muf6VvtMOd57jMtLZaS6Cra8h2ui",
	"briXqINJ8tdokjypjZ+zsNAjCUYmQL/eSDehMtvIhNZpawGgu1GPXBGwpQ61zYOELeJ3MkbXGImIZXG4",
	"HLsytp6OGmFeibfvFCAdJ2sMWVyAlnTGfxqhZpHgXDxuEKmBjfVLEOZSZF17wSTZqQsuUEdLGzfp7gMq",
	"NejICMfsGj07QMlkNzxd05maKAwr+/P84ftDqImVgZ4ddJ53G/bq79Gj593O3o9Nu1QNdPFoe7X3Y7ez",
	"/6xpt9wYL4+vUzBiM4ya96YateYr9yh/bmhD4dYvnkdagf3B/qbIf78RztvJsUeB+rYi63Ehv4V0elwd",
	"2FwQPQr8t5U5XxX5PFxgHiMwxRyFMF+BvA1CeAQknn9V1M1LVk5ww8JMXkp39525r4LzCQ3iTJDZKnle",
	"E/7YxbXZuwTVho8/b9rwJbuDZre1c0f/lnbu6N/Pzh39e9q5o38rO3f02O3c7WTC381mHP2tbcbR395m",
	"HP1dbcbR39lmHP19bcbR38JmHH0tm3F0PzZjjyUJdAROwYTwqRxj6PMzE+sTf05jFuLicZo6JPXhSrsu",
	"ZFmB3cILTGsfRtMBXFsvdBX3e1lx4bmixh6TK5w77uXCYnFonD8mG+dOOjZ+Uxmdf8Uh8qEpcr9HePft",
	"GOA0097wXLrs/zangrsgBJnQoYRJzRH1Q57p1l/w0thVjsK1f7/IRgK7t6CXnoObOsqz2EtmCHTPDl7V",
	"oMR13ld5WGK/C8bJ6eRIqJ7acPFqQqi+m+FKMJU7re0OlC1J3RfeLlke2OT2/l0FYxn3hsfKWNatoc7H",
	"Io6Rlj7NOazqaaG06WPhsQsQQl/Zy3kt77DPX253nZt/eZd30LuESGT7gEYsnLuFi/CWZYEtuXPR3QQp",
	"at4Df+ZM2TBUTk42zw9nR0eqIBybl1Rz8kimIwpCiNFo7jjthAmhirc0gTPOMZXxHEEmI0yl4gAc5g6O",
	"qo4EZBC5fq2IhDurme9O4uyUdW1z4dy5irrZjfOlXfg6avY1lmsoce9CbMNwD0pH6HgP5t0Xn2OdKDWZ",
	"udi1wqZSU+4er8V5bT1i00pT7jgn29L7cBs6pK3yqfIc0/7nmLS+k9u2pqwj0XdTzBOiY/uIB7E3Gngm",
	"OijZW/65gIxAIDbDzpKnvK1wYqJHu4WBK1UzY1MdWsA88ZzFheo2rtZtT3GknI1JjIuLg/nT2prDS31f",
	"3hUsPAADoCiI9I6ZrrDEY2c19144I3CvjOw29DA8XWlxQ/ZGPmXuktV3/ywTDXyMldVH6CR2h/XflDU9",
	"K6kcgLu0l5BX7VczGNq1d65Sv8vLLojkj8/kOzIq94zg61a7ZR7pVzUyad5FbxyKsp5vBabhMMSfA5YM",
	"bRSRoRUTDyqya62rPlbooSONXh7kxDXwFcfpEGUIwpBjIRaflKwEQ8E0NNX1TG15kLtHooNX97h4hfO2",
	"0sqw0ZDjhNDQvofzVUdajYtABi2Uo5WP8KrBNJvY/bwjWy13VT3IVIScmjahssBSmZc6GvjaGAPHb/rm",
	"2RMcorxg3Vrs+E1/UH6+N/50m2m6JlNdcHDb8Fb3vYUBraOs3cZeaetXKX33ZlKFyLe6hnI74jdg4oTT",
	"9RdVzvrnK7n3rH/+ENzrNtP4Nmj//DFybwWt2quYFaLew2VMn563YtQN6LyKLYsn3oZ04VG6uz4OO14a",
	"JqREA9HKU3N1I7X8Ybr7GLXVbd52HMt60cIrexsoSUlCPDSh/ZrcgzM5vZtwOpaeahKN5ujy5OgYBSDx",
	"hHGCF8fBvJuamvtZK29119/z+lq3uv52B+n/09xl79NxQDFtIz32nuBrMwUKHr9Tf4FV0/h2K4bNYidX",
	"hHD+XCOp2T333t68Pylr3wG9nUjNXwhtoBLr1+15hZuOw3anGiacqxkLc8yWR28l1I3QWvhomQLl4Zk9",
	"clqzXWkv/97vVmXeyCZD2G4d1G9K2VittYO80KnNRrvpS4evvcNfkQegI8I7B1zzrmG56/83ftXQduLO",
	"3jS8y5PH6qODi+McgoShYBkPbvWo4ZI1xhLhKjAvIzLriMkGA5RyNiMh5sXLe3aimxPkIuZnHnU1n/hr",
	"JvgRSBjYLt7PJHdbuMcZbg8pGc8VFHjUq7rONZn5HIfssx74ZWG2vUNmQgOWEDpBfVUOJVgImNSYwRec",
	"BViI4zf9M5PlFoRv+nDJ2l1OhfHxmz7Kl1sOifTHClV2kzzK0QYhyIungnVhfRxP7Q6R2U79Du9M9Mv+",
	"73iI+RPj0ubEdrHDpw89TsrzYrsKiYo5EhZzJABKmX7Jcqx4xpyx5DbLtRPo+w8v0vcfujn9XRVXy4ck",
	"laX3SbH+yTdEK+1qDI8yHS8jhmCqVgvmdXuKhUABo0JyIDqWiIkCoVbmqs2jdy/RmOA4FIjI/xQoZUKQ",
	"UWzfw06yWJI0xgva3XGKyVEBKTkZZRKLHf3IrzlzEs6Jkuo4DvMnnouI6woN3bY+ZoI4ViNlaSbybGQU",
	"Ezk30awl5gmhGEXsWgEioGGMUZgZxtVljCgqxs3QwmJNhDs4ec8KHgk4kZgTKBCHUHXP34q2TWjuGmcy",
	"49rAsQyVZkLXpOUBowiKWPFPdn5fjLF1plo2cuGQhvfrdaCEgGqueNrnfk9qy+ZWe0FvKHt1nbkzmn4y",
	"YHM5uzvDnIzny0VKvWePkVxBBHGM6QQjXYslzsLIvtdNOCJua1FpalouLZtt+SoTod6u3CCevJILYf5y",
	"HbWxAHNzQB8/a/GYG6MywnN9IO3Yotx9ESWfpeUiwbdbS7G7IEttYHtnXnZqHpWva4BRfRcvUR2wkZhV",
	"S3TepK0ixnnT1nTYHRrPc9/DFX168Tvt1LZlJU4bxRhmSrpUXphgmXmwQrXg1AFapdBO6dxfSjD33X3P",
	"4VSVn2KcmlVFfgjtl2irj+w692TTqimIgSSL9whE8QSGPr9cUnuRWU1oLTrxDFP7BsZcadb/87/+t1at",
	"upk82rZ5MJEI8zVvozgOduzUQmtD4atf551wJTAvXYfFtrNWe3aouowLRcMXnNu3MPq33FJRtM/NCHRi",
	"dLNVaUSpxbkOcf5ZYmrVoMhSvS9b+MmbTYGdlY/rKEocmVbudW/GbadWuW3iWWK3avQolsg3UTGfMcQy",
	"2nXPCVxN49Ppv3Vmd2N9O6Zza0C/4FHE2LRVwSjlmPH8xL8+uHWE0YXNVXJNAFTxAaHGq8gGug/0a+z5",
	"QtGarVoUpDEE+skRU08CNIM4nutJaA3A4zf9HTQwr+GMlARRbSgrqmj9FeOJqY1joZ2ewpAoNCFGhJqt",
	"Wu0sxdpKqXAcYKKfA0kz4zbaXsBxhMeMO4jZfml0w51q0zo6fyy0IzlJ0hgnmOqjZYYgR2ymEcvr05N9",
	"hLWnqa4TYSoJx/FcK4ZIylS82N0VQMMR+7xjRmWHsF1I011ISSdkgfgPCZPdIzIhEuJODzjeTUFGohi8",
	"XT1y7Vo2ynuwHQt5/S94aNsj5oLn2IRDolkuW8r/r7G8MBmveLwd9tpZ3NSBVCX1eIjGiIhbo2H3nda/",
	"dqnfx6w7mlKULSPPZjxuvWjlXKSksqL6jpNpR9rbKDuMT2qOZlLOwiyorQ5Ssq50iGd7C+UUcCfEs3WF",
	"P8Fi2U+gi+KYpfo61doq9muq2F9RxYeCeRdClgOFSa4FRdv8ACrcpb/WavbsqHh/v72sJkbHxMok63Vi",
	"L1Ka+wCMtvWj20o42MdT2gjLwG3DraKmpcOLE6F3OrQyNrtAVsEryTmao/wyklNpMVVrQlNko5gEhZgX",
	"hYAfzc1Sx6nGrDRuPtz83wAAAP//9PtgRi9HAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
