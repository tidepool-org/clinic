// Package Clinic provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xYX2/bNhD/KsRtj2qsrvWL3lJvLbItTZAN2EMQDIx4jtiJpEpSTjzD330gqb+WFDtO",
	"smHDAgQmSN6/3/3ufPQGUiUKJVFaA8kGTJqhoH65yLnkqVvRPL9YQnK9gUKrArXl6G/8zpn7sOsCIQFj",
	"NZd3sN1GoPFryTUySK79pZuovqRuv2BqYRtt4FuNS0jgm1nrwawyP/uM95X5rZPlNnfC9VYE7XmyAYYm",
	"1bywXElI4MJbIGHzlss7Qkka7kY7/lPGNBq/RFkK561FYzvu1jFFkKuUBgub4aFASxm1tHPYBAqSCnQH",
	"gsufUd7ZDJK3IwaKTEn8XIpb1N4jblH4Rd9n6W+MehE2xvIx8KnaoFrTdbhRQdwCuysVwcMbfKCiyIMj",
	"1bqHI7yL45icUy4J03yFEIGjCMzfv59DF0P4jeaytGShEf+AHoANYvCjyiQ5L7mGITo1DDCfz99U//PW",
	"Z0G5hK3/i4DLpfK4VDE2bFihNsGdtyexg0UVKGnBXSAn8Uns7FKbeYOztOFboYwd8m6hkVo0hJIGQJc3",
	"H/CZA+FSGdscuQpBYz8otnaqUiUtSq+VFkXOA06zLyYQLpSFWx1YNNtQhaZQ0oR0fRfHI7Xyk0++KYWg",
	"et0E0WiJ6rBnm/DJ2TZoydHiUN/3fn8KgHAaDheVOjjKza4ml7c79ND1zX1Ce5CtF8G+BT7a53zjl696",
	"qqlA61l9vQHuJBznoKmCtOt93VatLjHquLZb8jeeuWk2xPJcMb5cT3LUCY2g9rpkjXp6HkTeV7PTvYYQ",
	"92IibZc7gllB1aMFUO1wKptNKvcUxhUKtUJCjVEp92GSe26z6ouJUMlIo+qgulnUtxetB8+vJU7lR6Vf",
	"nZ3RY6qaSJ7C9dGOfMpY0405lcSqQ5rzyyN8ylplv6rHuVVQy1Ha2aZa7OFV2CfVZbLUSrTDzn4WXQa5",
	"y9rWwfFF8H7s6ANl5Co0C3dnPnbnTFrUkubkF9Qr1OQHrZUe5WTl1ketxD9EyaIHzIsQsk6VVVOJGlJx",
	"NE3HteT+MBk8OGOj4yQf364CmBAqUAtu3FTVH2InhtWRCbSKMsR+hbmPxGS8GEykR085p6yG9MBy9Lqr",
	"IaOv+xNaknNjiVrWqTVNm0fW7fKDRA8GlMva2jjNv5ao1y051XJp0M3lAyZyafEOdYfWO6I5F/w4SaO0",
	"vdAMNeypgGdNWhNvHxSU50/i6n1Gx+lXGtQTQu6ofrONPKX6NIX9j6snTIScSvN3fAHftGyfpvYVWs1x",
	"hQ2/K4ET4ns81+6xwwSXhBYFoaXNlOZ/hgfeJNX/I9zuNt/tS5H9kPfFc9jVbXJmdKA9gAx0hw5OiiyV",
	"7v7KMpX7wWj1f6drkr//RyymUqv04Ees45pi9jpdcdF5xPwr+6Kz7+fSoLjUOSSQWVsks1muUppnytjk",
	"XRzHsL3Z/hUAAP//y8ggWT4VAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

