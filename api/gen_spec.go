// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"rrh9f/u/AwAA//+KFYX52BcBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
