// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
