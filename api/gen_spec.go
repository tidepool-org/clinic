// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
