// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
