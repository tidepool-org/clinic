// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"9t8BAAD//2r5rp6DRgAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

