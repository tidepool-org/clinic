// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package api

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	SessionTokenScopes = "sessionToken.Scopes"
)

// Defines values for AverageGlucoseUnits.
const (
	AverageGlucoseUnitsMmolL AverageGlucoseUnits = "mmol/L"
	AverageGlucoseUnitsMmoll AverageGlucoseUnits = "mmol/l"
)

// Defines values for ClinicClinicSize.
const (
	N0249   ClinicClinicSize = "0-249"
	N1000   ClinicClinicSize = "1000+"
	N250499 ClinicClinicSize = "250-499"
	N500999 ClinicClinicSize = "500-999"
)

// Defines values for ClinicClinicType.
const (
	HealthcareSystem ClinicClinicType = "healthcare_system"
	Other            ClinicClinicType = "other"
	ProviderPractice ClinicClinicType = "provider_practice"
	Researcher       ClinicClinicType = "researcher"
	VeterinaryClinic ClinicClinicType = "veterinary_clinic"
)

// Defines values for ClinicPreferredBgUnits.
const (
	ClinicPreferredBgUnitsMgdL  ClinicPreferredBgUnits = "mg/dL"
	ClinicPreferredBgUnitsMmolL ClinicPreferredBgUnits = "mmol/L"
)

// Defines values for DataSourceState.
const (
	DataSourceStateConnected        DataSourceState = "connected"
	DataSourceStateDisconnected     DataSourceState = "disconnected"
	DataSourceStateError            DataSourceState = "error"
	DataSourceStatePending          DataSourceState = "pending"
	DataSourceStatePendingReconnect DataSourceState = "pendingReconnect"
)

// Defines values for MigrationStatus.
const (
	COMPLETED MigrationStatus = "COMPLETED"
	PENDING   MigrationStatus = "PENDING"
	RUNNING   MigrationStatus = "RUNNING"
)

// Defines values for Tier.
const (
	Tier0100 Tier = "tier0100"
	Tier0200 Tier = "tier0200"
	Tier0300 Tier = "tier0300"
	Tier0400 Tier = "tier0400"
)

// AssociateClinicianToUser defines model for AssociateClinicianToUser.
type AssociateClinicianToUser struct {
	UserId string `json:"userId"`
}

// AverageGlucose Blood glucose value, in `mmol/L`
type AverageGlucose struct {
	Units AverageGlucoseUnits `json:"units"`

	// Value A floating point value representing a `mmol/L` value.
	Value float32 `json:"value"`
}

// AverageGlucoseUnits defines model for AverageGlucose.Units.
type AverageGlucoseUnits string

// Clinic Clinic
type Clinic struct {
	// Address Street address.
	Address    *string `json:"address,omitempty"`
	CanMigrate *bool   `json:"canMigrate,omitempty"`

	// City City name.
	City       *string           `json:"city,omitempty"`
	ClinicSize *ClinicClinicSize `json:"clinicSize,omitempty"`
	ClinicType *ClinicClinicType `json:"clinicType,omitempty"`

	// Country Country name.
	Country     *string    `json:"country,omitempty"`
	CreatedTime *time.Time `json:"createdTime,omitempty"`

	// Id Clinic identifier.
	Id                    *Id         `json:"id,omitempty"`
	LastDeletedPatientTag *PatientTag `json:"lastDeletedPatientTag,omitempty"`

	// Name Name of the clinic.
	Name        string        `json:"name"`
	PatientTags *[]PatientTag `json:"patientTags,omitempty"`

	// PhoneNumbers An array of phone numbers.
	PhoneNumbers *[]PhoneNumber `json:"phoneNumbers,omitempty"`

	// PostalCode Postal code. In the U.S., typically the zip code such as `94301` or `94301-1704`.
	PostalCode       *string                `json:"postalCode,omitempty"`
	PreferredBgUnits ClinicPreferredBgUnits `json:"preferredBgUnits"`

	// ShareCode Globally unique share code for a clinic. The share code is 3 groups of 4 uppercase alphanumeric characters in each group. Ambiguous characters such as `I` and `1`, or `O` and `0` are excluded.
	ShareCode *string `json:"shareCode,omitempty"`

	// State State or province. In the U.S., typically something like `CA` or `California`.
	State           *string    `json:"state,omitempty"`
	Tier            *string    `json:"tier,omitempty"`
	TierDescription *string    `json:"tierDescription,omitempty"`
	UpdatedTime     *time.Time `json:"updatedTime,omitempty"`
	Website         *string    `json:"website,omitempty"`
}

// ClinicClinicSize defines model for Clinic.ClinicSize.
type ClinicClinicSize string

// ClinicClinicType defines model for Clinic.ClinicType.
type ClinicClinicType string

// ClinicPreferredBgUnits defines model for Clinic.PreferredBgUnits.
type ClinicPreferredBgUnits string

// Clinician The `id` may be empty if the clinician invite has not been accepted.
type Clinician struct {
	CreatedTime *time.Time `json:"createdTime,omitempty"`
	Email       string     `json:"email"`

	// Id String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
	Id *TidepoolUserId `json:"id,omitempty"`

	// InviteId The id of the invite if it hasn't been accepted
	InviteId *string `json:"inviteId,omitempty"`

	// Name The name of the clinician
	Name        *string        `json:"name,omitempty"`
	Roles       ClinicianRoles `json:"roles"`
	UpdatedTime *time.Time     `json:"updatedTime,omitempty"`
}

// ClinicianClinicRelationship defines model for ClinicianClinicRelationship.
type ClinicianClinicRelationship struct {
	// Clinic Clinic
	Clinic Clinic `json:"clinic"`

	// Clinician The `id` may be empty if the clinician invite has not been accepted.
	Clinician Clinician `json:"clinician"`
}

// ClinicianClinicRelationships defines model for ClinicianClinicRelationships.
type ClinicianClinicRelationships = []ClinicianClinicRelationship

// ClinicianRoles defines model for ClinicianRoles.
type ClinicianRoles = []string

// Clinicians defines model for Clinicians.
type Clinicians = []Clinician

// Clinics defines model for Clinics.
type Clinics = []Clinic

// CreatePatient defines model for CreatePatient.
type CreatePatient struct {
	AttestationSubmitted *bool `json:"attestationSubmitted,omitempty"`
	IsMigrated           *bool `json:"isMigrated,omitempty"`

	// LegacyClinicianId String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
	LegacyClinicianId *TidepoolUserId     `json:"legacyClinicianId,omitempty"`
	Permissions       *PatientPermissions `json:"permissions,omitempty"`
}

// DataSource defines model for DataSource.
type DataSource struct {
	// DataSourceId String representation of a resource id
	DataSourceId *string `json:"dataSourceId,omitempty"`

	// ExpirationTime [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) / [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp _with_ timezone information
	ExpirationTime *DateTime `json:"expirationTime,omitempty"`

	// ModifiedTime [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) / [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp _with_ timezone information
	ModifiedTime *DateTime       `json:"modifiedTime,omitempty"`
	ProviderName string          `json:"providerName"`
	State        DataSourceState `json:"state"`
}

// DataSourceState defines model for DataSource.State.
type DataSourceState string

// DataSources defines model for DataSources.
type DataSources = []DataSource

// DateTime [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) / [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp _with_ timezone information
type DateTime = string

// Error defines model for Error.
type Error struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// Id Clinic identifier.
type Id = string

// Meta defines model for Meta.
type Meta struct {
	Count *int `json:"count,omitempty"`
}

// Migration defines model for Migration.
type Migration struct {
	AttestationTime *time.Time `json:"attestationTime,omitempty"`
	CreatedTime     *time.Time `json:"createdTime,omitempty"`

	// Status The current status of the migration
	Status      *MigrationStatus `json:"status,omitempty"`
	UpdatedTime *time.Time       `json:"updatedTime,omitempty"`

	// UserId The user id of the legacy clinician account that needs to be migrated.
	UserId string `json:"userId"`
}

// MigrationStatus The current status of the migration
type MigrationStatus string

// MigrationUpdate defines model for MigrationUpdate.
type MigrationUpdate struct {
	// Status The current status of the migration
	Status MigrationStatus `json:"status"`
}

// Migrations defines model for Migrations.
type Migrations = []Migration

// Patient defines model for Patient.
type Patient struct {
	AttestationSubmitted *bool              `json:"attestationSubmitted,omitempty"`
	BirthDate            openapi_types.Date `json:"birthDate"`
	CreatedTime          *time.Time         `json:"createdTime,omitempty"`
	DataSources          *[]DataSource      `json:"dataSources"`
	Email                *string            `json:"email,omitempty"`

	// FullName The full name of the patient
	FullName string `json:"fullName"`

	// Id String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
	Id                             *TidepoolUserId `json:"id,omitempty"`
	LastRequestedDexcomConnectTime *time.Time      `json:"lastRequestedDexcomConnectTime,omitempty"`
	LastUploadReminderTime         *time.Time      `json:"lastUploadReminderTime,omitempty"`

	// Mrn The medical record number of the patient
	Mrn           *string             `json:"mrn,omitempty"`
	Permissions   *PatientPermissions `json:"permissions,omitempty"`
	Summary       *PatientSummary     `json:"summary,omitempty"`
	Tags          *[]string           `json:"tags"`
	TargetDevices *[]string           `json:"targetDevices,omitempty"`
	UpdatedTime   *time.Time          `json:"updatedTime,omitempty"`
}

// PatientClinicRelationship defines model for PatientClinicRelationship.
type PatientClinicRelationship struct {
	// Clinic Clinic
	Clinic  Clinic  `json:"clinic"`
	Patient Patient `json:"patient"`
}

// PatientClinicRelationships defines model for PatientClinicRelationships.
type PatientClinicRelationships = []PatientClinicRelationship

// PatientPermissions defines model for PatientPermissions.
type PatientPermissions struct {
	Custodian *map[string]interface{} `json:"custodian,omitempty"`
	Note      *map[string]interface{} `json:"note,omitempty"`
	Upload    *map[string]interface{} `json:"upload,omitempty"`
	View      *map[string]interface{} `json:"view,omitempty"`
}

// PatientSummary defines model for PatientSummary.
type PatientSummary struct {
	FirstData                *time.Time             `json:"firstData,omitempty"`
	HighGlucoseThreshold     *float64               `json:"highGlucoseThreshold,omitempty"`
	LastData                 *time.Time             `json:"lastData,omitempty"`
	LastUpdatedDate          *time.Time             `json:"lastUpdatedDate,omitempty"`
	LastUploadDate           *time.Time             `json:"lastUploadDate,omitempty"`
	LowGlucoseThreshold      *float64               `json:"lowGlucoseThreshold,omitempty"`
	OutdatedSince            *time.Time             `json:"outdatedSince,omitempty"`
	Periods                  *PatientSummaryPeriods `json:"periods,omitempty"`
	TotalDays                *int                   `json:"totalDays,omitempty"`
	VeryHighGlucoseThreshold *float64               `json:"veryHighGlucoseThreshold,omitempty"`
	VeryLowGlucoseThreshold  *float64               `json:"veryLowGlucoseThreshold,omitempty"`
}

// PatientSummaryPeriod defines model for PatientSummaryPeriod.
type PatientSummaryPeriod struct {
	// AverageGlucose Blood glucose value, in `mmol/L`
	AverageGlucose             *AverageGlucose `json:"averageGlucose,omitempty"`
	GlucoseManagementIndicator *float64        `json:"glucoseManagementIndicator,omitempty"`
	TimeCGMUseMinutes          *int            `json:"timeCGMUseMinutes,omitempty"`
	TimeCGMUsePercent          *float64        `json:"timeCGMUsePercent,omitempty"`
	TimeCGMUseRecords          *int            `json:"timeCGMUseRecords,omitempty"`
	TimeInHighMinutes          *int            `json:"timeInHighMinutes,omitempty"`
	TimeInHighPercent          *float64        `json:"timeInHighPercent,omitempty"`
	TimeInHighRecords          *int            `json:"timeInHighRecords,omitempty"`
	TimeInLowMinutes           *int            `json:"timeInLowMinutes,omitempty"`
	TimeInLowPercent           *float64        `json:"timeInLowPercent,omitempty"`
	TimeInLowRecords           *int            `json:"timeInLowRecords,omitempty"`
	TimeInTargetMinutes        *int            `json:"timeInTargetMinutes,omitempty"`
	TimeInTargetPercent        *float64        `json:"timeInTargetPercent,omitempty"`
	TimeInTargetRecords        *int            `json:"timeInTargetRecords,omitempty"`
	TimeInVeryHighMinutes      *int            `json:"timeInVeryHighMinutes,omitempty"`
	TimeInVeryHighPercent      *float64        `json:"timeInVeryHighPercent,omitempty"`
	TimeInVeryHighRecords      *int            `json:"timeInVeryHighRecords,omitempty"`
	TimeInVeryLowMinutes       *int            `json:"timeInVeryLowMinutes,omitempty"`
	TimeInVeryLowPercent       *float64        `json:"timeInVeryLowPercent,omitempty"`
	TimeInVeryLowRecords       *int            `json:"timeInVeryLowRecords,omitempty"`
}

// PatientSummaryPeriods defines model for PatientSummaryPeriods.
type PatientSummaryPeriods struct {
	N14d *PatientSummaryPeriod `json:"14d,omitempty"`
}

// PatientTag defines model for PatientTag.
type PatientTag struct {
	// Id String representation of a resource id
	Id *string `json:"id,omitempty"`

	// Name The tag display name
	Name string `json:"name"`
}

// Patients defines model for Patients.
type Patients = []Patient

// PatientsResponse defines model for PatientsResponse.
type PatientsResponse struct {
	Data *Patients `json:"data,omitempty"`
	Meta *Meta     `json:"meta,omitempty"`
}

// PhoneNumber defines model for PhoneNumber.
type PhoneNumber struct {
	Number string  `json:"number"`
	Type   *string `json:"type,omitempty"`
}

// TidepoolUserId String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
type TidepoolUserId = string

// Tier defines model for Tier.
type Tier string

// TriggerMigration defines model for TriggerMigration.
type TriggerMigration struct {
	AttestationSubmitted *bool `json:"attestationSubmitted,omitempty"`
}

// UpdateTier defines model for UpdateTier.
type UpdateTier struct {
	Tier Tier `json:"tier"`
}

// UpdateUserDetails defines model for UpdateUserDetails.
type UpdateUserDetails struct {
	Email *openapi_types.Email `json:"email,omitempty"`
}

// ClinicId defines model for clinicId.
type ClinicId = string

// ClinicianId defines model for clinicianId.
type ClinicianId = string

// CreatedTimeEnd defines model for createdTimeEnd.
type CreatedTimeEnd = time.Time

// CreatedTimeStart defines model for createdTimeStart.
type CreatedTimeStart = time.Time

// Email defines model for email.
type Email = openapi_types.Email

// InviteId defines model for inviteId.
type InviteId = string

// Limit defines model for limit.
type Limit = int

// Offset defines model for offset.
type Offset = int

// PatientId defines model for patientId.
type PatientId = string

// PatientTagId defines model for patientTagId.
type PatientTagId = string

// Role defines model for role.
type Role = string

// Search defines model for search.
type Search = string

// ShareCode defines model for shareCode.
type ShareCode = string

// Sort defines model for sort.
type Sort = string

// UserId String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
type UserId = TidepoolUserId

// ListAllCliniciansParams defines parameters for ListAllClinicians.
type ListAllCliniciansParams struct {
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`

	// CreatedTimeStart Return records created after the given date (inclusive)
	CreatedTimeStart *CreatedTimeStart `form:"createdTimeStart,omitempty" json:"createdTimeStart,omitempty"`

	// CreatedTimeEnd Return records created before the given date (exclusive)
	CreatedTimeEnd *CreatedTimeEnd `form:"createdTimeEnd,omitempty" json:"createdTimeEnd,omitempty"`
}

// ListClinicsForClinicianParams defines parameters for ListClinicsForClinician.
type ListClinicsForClinicianParams struct {
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListClinicsParams defines parameters for ListClinics.
type ListClinicsParams struct {
	Limit     *Limit     `form:"limit,omitempty" json:"limit,omitempty"`
	Offset    *Offset    `form:"offset,omitempty" json:"offset,omitempty"`
	ShareCode *ShareCode `form:"shareCode,omitempty" json:"shareCode,omitempty"`

	// CreatedTimeStart Return records created after the given date (inclusive)
	CreatedTimeStart *CreatedTimeStart `form:"createdTimeStart,omitempty" json:"createdTimeStart,omitempty"`

	// CreatedTimeEnd Return records created before the given date (exclusive)
	CreatedTimeEnd *CreatedTimeEnd `form:"createdTimeEnd,omitempty" json:"createdTimeEnd,omitempty"`
}

// ListCliniciansParams defines parameters for ListClinicians.
type ListCliniciansParams struct {
	// Search Full text search query
	Search *Search `form:"search,omitempty" json:"search,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Email  *Email  `form:"email,omitempty" json:"email,omitempty"`
	Role   *Role   `form:"role,omitempty" json:"role,omitempty"`
}

// ListPatientsParams defines parameters for ListPatients.
type ListPatientsParams struct {
	// Search Full text search query
	Search *Search `form:"search,omitempty" json:"search,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`

	// Sort Sort order and attribute (e.g. +name or -name)
	Sort *Sort `form:"sort,omitempty" json:"sort,omitempty"`

	// SummaryPeriods14dTimeCGMUsePercent Percentage of time of CGM use
	SummaryPeriods14dTimeCGMUsePercent *string `form:"summary.periods.14d.timeCGMUsePercent,omitempty" json:"summary.periods.14d.timeCGMUsePercent,omitempty"`

	// SummaryPeriods14dTimeInVeryLowPercent Percentage of time below 54 mg/dL
	SummaryPeriods14dTimeInVeryLowPercent *string `form:"summary.periods.14d.timeInVeryLowPercent,omitempty" json:"summary.periods.14d.timeInVeryLowPercent,omitempty"`

	// SummaryPeriods14dTimeInLowPercent Percentage of time in range 54-70 mg/dL
	SummaryPeriods14dTimeInLowPercent *string `form:"summary.periods.14d.timeInLowPercent,omitempty" json:"summary.periods.14d.timeInLowPercent,omitempty"`

	// SummaryPeriods14dTimeInTargetPercent Percentage of time in range 70-180 mg/dL
	SummaryPeriods14dTimeInTargetPercent *string `form:"summary.periods.14d.timeInTargetPercent,omitempty" json:"summary.periods.14d.timeInTargetPercent,omitempty"`

	// SummaryPeriods14dTimeInHighPercent Percentage of time in range 180-250 mg/dL
	SummaryPeriods14dTimeInHighPercent *string `form:"summary.periods.14d.timeInHighPercent,omitempty" json:"summary.periods.14d.timeInHighPercent,omitempty"`

	// SummaryPeriods14dTimeInVeryHighPercent Percentage of time above range 250 mg/dL
	SummaryPeriods14dTimeInVeryHighPercent *string `form:"summary.periods.14d.timeInVeryHighPercent,omitempty" json:"summary.periods.14d.timeInVeryHighPercent,omitempty"`

	// SummaryLastUploadDateFrom Inclusive
	SummaryLastUploadDateFrom *time.Time `form:"summary.lastUploadDateFrom,omitempty" json:"summary.lastUploadDateFrom,omitempty"`

	// SummaryLastUploadDateTo Exclusive
	SummaryLastUploadDateTo *time.Time `form:"summary.lastUploadDateTo,omitempty" json:"summary.lastUploadDateTo,omitempty"`

	// Tags Comma-separated list of patient tag IDs
	Tags *[]string `form:"tags,omitempty" json:"tags,omitempty"`
}

// ListClinicsForPatientParams defines parameters for ListClinicsForPatient.
type ListClinicsForPatientParams struct {
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateClinicJSONRequestBody defines body for CreateClinic for application/json ContentType.
type CreateClinicJSONRequestBody = Clinic

// UpdateClinicJSONRequestBody defines body for UpdateClinic for application/json ContentType.
type UpdateClinicJSONRequestBody = Clinic

// CreateClinicianJSONRequestBody defines body for CreateClinician for application/json ContentType.
type CreateClinicianJSONRequestBody = Clinician

// UpdateClinicianJSONRequestBody defines body for UpdateClinician for application/json ContentType.
type UpdateClinicianJSONRequestBody = Clinician

// AssociateClinicianToUserJSONRequestBody defines body for AssociateClinicianToUser for application/json ContentType.
type AssociateClinicianToUserJSONRequestBody = AssociateClinicianToUser

// TriggerInitialMigrationJSONRequestBody defines body for TriggerInitialMigration for application/json ContentType.
type TriggerInitialMigrationJSONRequestBody = TriggerMigration

// MigrateLegacyClinicianPatientsJSONRequestBody defines body for MigrateLegacyClinicianPatients for application/json ContentType.
type MigrateLegacyClinicianPatientsJSONRequestBody = Migration

// UpdateMigrationJSONRequestBody defines body for UpdateMigration for application/json ContentType.
type UpdateMigrationJSONRequestBody = MigrationUpdate

// CreatePatientTagJSONRequestBody defines body for CreatePatientTag for application/json ContentType.
type CreatePatientTagJSONRequestBody = PatientTag

// UpdatePatientTagJSONRequestBody defines body for UpdatePatientTag for application/json ContentType.
type UpdatePatientTagJSONRequestBody = PatientTag

// CreatePatientAccountJSONRequestBody defines body for CreatePatientAccount for application/json ContentType.
type CreatePatientAccountJSONRequestBody = Patient

// CreatePatientFromUserJSONRequestBody defines body for CreatePatientFromUser for application/json ContentType.
type CreatePatientFromUserJSONRequestBody = CreatePatient

// UpdatePatientJSONRequestBody defines body for UpdatePatient for application/json ContentType.
type UpdatePatientJSONRequestBody = Patient

// UpdatePatientPermissionsJSONRequestBody defines body for UpdatePatientPermissions for application/json ContentType.
type UpdatePatientPermissionsJSONRequestBody = PatientPermissions

// UpdateTierJSONRequestBody defines body for UpdateTier for application/json ContentType.
type UpdateTierJSONRequestBody = UpdateTier

// UpdatePatientSummaryJSONRequestBody defines body for UpdatePatientSummary for application/json ContentType.
type UpdatePatientSummaryJSONRequestBody = PatientSummary

// UpdatePatientDataSourcesJSONRequestBody defines body for UpdatePatientDataSources for application/json ContentType.
type UpdatePatientDataSourcesJSONRequestBody = DataSources

// UpdateClinicUserDetailsJSONRequestBody defines body for UpdateClinicUserDetails for application/json ContentType.
type UpdateClinicUserDetailsJSONRequestBody = UpdateUserDetails
