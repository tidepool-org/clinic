openapi: 3.0.0
info:
  title: clinic
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /clinics:
    get:
      summary: GetClinic
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1clinic~1%7Bclinicid%7D/get/responses/200/content/application~1json/schema'
      operationId: get-clinics
      description: Retrieve list of clinics.  Requires admin app authorization
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
          description: ''
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: sortOrder
      requestBody:
        description: ''
    parameters: []
  /clinic:
    post:
      summary: CreateClinic
      tags: []
      responses:
        '200':
          description: OK
      operationId: post-clinic
      description: Creates a Clinic
      requestBody:
        content:
          application/json:
            schema:
              title: NewClinic
              type: object
              x-examples:
                example:
                  id: '5445'
                  name: John Muir
                  address: 3000 Main drive
                  phoneNumbers:
                    type: main
                    number: 555-555-5555
                  location: Walnut Creek
                  metadata: {}
              description: Object describing a clinic
              properties:
                name:
                  type: string
                  minLength: 1
                address:
                  type: string
                  enum:
                    - test
                phoneNumbers:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      number:
                        type: string
                location:
                  type: string
                metadata:
                  type: object
  '/clinic/{clinicid}':
    parameters:
      - schema:
          type: string
        name: clinicid
        in: path
        required: true
    get:
      summary: GetClinic
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      _id:
                        type: string
                    required:
                      - _id
                  - $ref: '#/paths/~1clinic/post/requestBody/content/application~1json/schema'
                title: Clinic
      operationId: get-clinic-clinicid
    patch:
      summary: ModifyClinic
      operationId: patch-clinic-clinicid
      responses:
        '200':
          description: OK
      description: Modify Clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/paths/~1clinic/post/requestBody/content/application~1json/schema'
          application/xml:
            schema:
              type: object
              properties: {}
        description: Modify Clinic object
    delete:
      summary: DeleteClinic
      operationId: delete-clinic-clinicid
      responses:
        '200':
          description: OK
      description: Delete Clinic
  '/clinics/{clinicid}/clinicians':
    parameters:
      - schema:
          type: string
        name: clinicid
        in: path
        required: true
    get:
      summary: GetCliniciansForClinic
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Clinician
                  type: object
                  description: Object describing a doctor
                  properties:
                    id:
                      type: string
                    username:
                      type: string
                    email:
                      type: string
                    userid:
                      type: string
                    pwhash:
                      type: string
      operationId: get-clinics-clinicid-clinicians
      description: Retrieve a list of clinicians for a clinic
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: sortOrder
  '/clinic/{clinicid}/clinician/{clinicianid}':
    parameters:
      - schema:
          type: string
        name: clinicid
        in: path
        required: true
      - schema:
          type: string
        name: clinicianid
        in: path
        required: true
    delete:
      summary: DeleteClinicianForClinic
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-clinic-clinicid-clinician-clinicianid
      description: Remove association with clinic and clinician
    post:
      summary: AddClinicianToClinic
      operationId: post-clinic-clinicid-clinician-clinicianid
      responses:
        '200':
          description: OK
      description: Add a Clinician to a Clinic
  '/clinic/{clinicid}/patients':
    parameters:
      - schema:
          type: string
        name: clinicid
        in: path
        required: true
    get:
      summary: GetCliniciansForClinic
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Patient
                  type: object
                  properties:
                    id:
                      type: string
                    username:
                      type: string
                    email:
                      type: string
                    userid:
                      type: string
                    pwhas:
                      type: string
      operationId: get-clinic-clinicid-patients
      description: Get list of patients associated with clinic
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: sortOrder
  '/clinic/{clinicid}/patient/{patientid}':
    parameters:
      - schema:
          type: string
        name: clinicid
        in: path
        required: true
      - schema:
          type: string
        name: patientid
        in: path
        required: true
    delete:
      summary: DeletePatientFromClinic
      tags: []
      operationId: delete-clinic-clinicid-patient-patientid
      description: delete patient from clinic
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    post:
      summary: AddPatientToClinic
      operationId: post-clinic-clinicid-patient-patientid
      responses:
        '200':
          description: OK
      description: Add patient to clinic
      requestBody:
        content:
          application/json:
            schema:
              title: PatientClinicRelationship
              type: object
              properties:
                id:
                  type: string
                patientId:
                  type: string
                clinicId:
                  type: string
                permissions:
                  type: array
                  items:
                    type: string
components:
  schemas: {}
