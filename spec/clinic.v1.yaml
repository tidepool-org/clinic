openapi: 3.0.0
info:
  title: Clinic service
  version: '1.0'
  description: 'Web service that stores information about clinics, clinicians and their patients'
  contact:
    name: Tidepool
    url: 'https://www.tidepool.org'
    email: support@tidepool.org
servers:
  - url: 'http://localhost:8080'
    description: local development
  - url: 'https://dev1.dev.tidepool.org'
    description: dev1
  - url: 'https://qa1.development.tidepool.org'
    description: qa1
  - url: 'https://qa2.development.tidepool.org'
    description: qa2
  - url: 'https://external.integration.tidepool.org'
    description: integration
  - url: 'https://api.tidepool.org'
    description: production
paths:
  /v1/clinics:
    get:
      summary: List Clinics
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinics'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: ListClinics
      description: Retrieve the list of clinics
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: ''
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: string
          in: query
          name: sort
        - schema:
            type: string
          in: query
          name: clinicianId
        - schema:
            type: string
          in: query
          name: patientId
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
        - CLINIC_CLINICIAN
    parameters: []
    post:
      summary: Create Clinic
      operationId: CreateClinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
      description: Create a new clinic
      x-roles: []
      tags:
        - clinic
      parameters: []
  '/v1/clinics/{clinicId}':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    get:
      summary: Get Clinic
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
          links:
            get-clinicians:
              operationId: get-clinics-clinicid-clinicians
              parameters:
                clinicid: $request.query.clinicid
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: GetClinic
      description: Retrieve a clinic by id
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
        - CLINIC_CLINICIAN
      parameters: []
    put:
      summary: Update Clinic
      operationId: UpdateClinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Update a clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      security:
        - sessionToken: []
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
      tags: []
  '/v1/clinics/{clinicId}/clinicians':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    get:
      summary: List Clinicians
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinicians'
      operationId: ListClinicians
      description: 'Retrieve the list of all clinic members. '
      parameters:
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: integer
          in: query
          name: offset
    post:
      summary: Create Clinician
      operationId: CreateClinician
      responses:
        '200':
          description: OK
      description: Internal endpoint to create a new clinician
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinician'
      tags:
        - clinic
  '/v1/clinics/{clinicId}/patients':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    get:
      summary: List Patients
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patients'
      operationId: ListPatients
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: 'Full text search query that matches patient''s name, email and mrn'
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - schema:
            type: integer
            minimum: 1
            default: 10
          in: query
          name: limit
      description: Retrieve a list of patients of a clinic
    post:
      summary: Create Patient Account
      operationId: CreatePatientAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Create a custodial account for a patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      tags:
        - clinic
  '/v1/clinics/{clinicId}/clinicians/{clinicianId}':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
      - schema:
          type: string
        name: clinicianId
        in: path
        required: true
    get:
      summary: Get Clinician
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      operationId: GetClinician
      description: Retrieve a member of clinic given their user id
    put:
      summary: Update Clinician
      operationId: UpdateClinician
      responses:
        '200':
          description: OK
      description: Update existing clinician
      tags:
        - clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinician'
    delete:
      summary: Delete Clinician
      operationId: DeleteClinician
      responses:
        '200':
          description: OK
      description: Removes a clinician from a clinic
      tags:
        - clinic
  '/v1/clinics/{clinicId}/patients/{patientId}':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
      - schema:
          type: string
        name: patientId
        in: path
        required: true
    get:
      summary: Get Patient
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      operationId: GetPatient
      description: Retrieve a patient of clinic given their user id
    post:
      summary: Create Patient from Existing User
      operationId: CreatePatientFromUser
      responses:
        '200':
          description: OK
      description: Internal endpoint for creating a patient record from an existing user
      tags:
        - clinic
    put:
      summary: Update Patient
      operationId: UpdatePatient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Update existing patient of a clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      tags:
        - clinic
  '/v1/clinics/{clinicId}/invites':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    post:
      summary: Invite Clinician
      operationId: InviteClinician
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Send an invite to join a clinic to clinician's email address.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteClinician'
      tags:
        - confirmation
  '/v1/clinics/{clinicId}/invites/{inviteId}':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
      - schema:
          type: string
        name: inviteId
        in: path
        required: true
    patch:
      summary: ''
      operationId: ResendInvite
      responses:
        '200':
          description: OK
      description: Resend invite to clinician's email address
      tags:
        - confirmation
    delete:
      summary: Delete Invite
      operationId: DeleteInvite
      responses:
        '200':
          description: OK
      description: Deletes unaccepted invite
      tags:
        - confirmation
    put:
      summary: Accept Invite
      operationId: AcceptInvite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Accept an invite with the confirmation key that was sent to clinician's email address.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptInvite'
      tags:
        - confirmation
components:
  schemas:
    Error:
      title: Error
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    Clinic:
      title: Clinic
      x-examples:
        example:
          name: ACME Diabetes Clinic
          address: 3000 Main drive
          phoneNumbers:
            type: main
            number: 555-555-5555
      description: ''
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        address:
          type: string
        city:
          type: string
        postalCode:
          type: string
        state:
          type: string
        country:
          type: string
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        clinicType:
          type: string
        clinicSize:
          type: integer
          readOnly: true
        name:
          type: string
        email:
          type: string
          format: email
      required:
        - name
        - email
        - id
    Clinics:
      type: array
      items:
        $ref: '#/components/schemas/Clinic'
    Clinician:
      title: Clinician
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        userId:
          type: string
          description: The user id of the clinician
        inviteId:
          type: string
          description: The id of the invite if it hasn't been accepted
        email:
          type: string
          format: email
          description: The email of the clinician
        name:
          type: string
          minLength: 1
          description: The name of the clinician
        permissions:
          $ref: '#/components/schemas/ClinicianPermissions'
      required:
        - email
    Clinicians:
      type: array
      items:
        $ref: '#/components/schemas/Clinician'
    Patient:
      type: object
      title: Patient
      description: ''
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        email:
          type: string
          description: The email of the patient
          format: email
        fullName:
          type: string
          description: The full name of the patient
        birthDate:
          type: string
          format: date
          description: YYYY-MM-DD
        mrn:
          type: string
          description: The medical record number of the patient
        targetDevices:
          type: array
          items:
            type: string
        permissions:
          $ref: '#/components/schemas/PatientPermissions'
      required:
        - id
    Patients:
      type: array
      items:
        $ref: '#/components/schemas/Patient'
    InviteClinician:
      title: Invite Clinician
      type: object
      properties:
        email:
          type: string
        permissions:
          $ref: '#/components/schemas/ClinicianPermissions'
      required:
        - email
        - permissions
    AcceptInvite:
      title: Accept Invite
      type: object
      properties:
        key:
          type: string
          description: Confirmation Key
      required:
        - key
    UserId:
      type: string
      title: Tidepool User ID
      minLength: 10
      maxLength: 10
      pattern: '^[a-f0-9]{10}'
      description: String representation of a Tidepool User ID
      readOnly: true
    ClinicianPermissions:
      type: array
      title: Clinician Permissions
      items:
        type: string
        enum:
          - ADMINISTER_CLINIC
          - SUBMIT_PRESCRIPTIONS
    PhoneNumber:
      title: Phone Number
      type: object
      properties:
        type:
          type: string
        number:
          type: string
      required:
        - number
    PatientPermissions:
      type: object
      title: Patient Permissions
      properties:
        upload:
          type: object
          description: Allow uploading data
        view:
          type: object
          description: Allow viewing data
        note:
          type: object
          description: Allow annotating data
        root:
          type: object
          description: Allow full control of account
        custodian:
          type: object
          description: Allow custodial control of an account
      readOnly: true
    Id:
      type: string
      title: Object Id
      description: String representation of a resource id
      minLength: 24
      maxLength: 24
      pattern: '^[a-f0-9]{24}$'
      readOnly: true
  securitySchemes:
    sessionToken:
      name: x-tidepool-session-token
      type: apiKey
      in: header
      description: ''
  headers:
    x-tidepool-session-token:
      schema:
        type: string
        title: Tidepool Session Token
        pattern: '^[a-zA-Z0-9\-_]+?\.[a-zA-Z0-9\-_]+?\.([a-zA-Z0-9\-_]+)?$'
      description: A Tidepool session token
  parameters:
    userId:
      name: userId
      in: path
      schema:
        $ref: '#/components/schemas/UserId'
      required: true
tags:
  - name: auth
    description: Tidepool Authentication
  - name: data
    description: Tidepool Diabetes Data
  - name: export
    description: Tidepool Data Export
  - name: clinic
    description: Tidepool Clinic
  - name: invite
  - name: confirmation
security:
  - sessionToken: []
